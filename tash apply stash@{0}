 .coveragerc                                        |  14 [32m+[m
 .github/workflows/ci.yml                           |  51 [32m++++[m
 .gitignore                                         |  36 [32m++[m[31m-[m
 .pre-commit-config.yaml                            |  18 [32m++[m
 CHANGELOG.md                                       |   2 [32m+[m
 UI_Vector/Backup_of_Koteyka.cdr                    | Bin [31m2463248[m -> [32m0[m bytes
 UI_Vector/Koteyka.cdr                              | Bin [31m2461452[m -> [32m0[m bytes
 .../reference/7b849c98e3011ee6e1593518fbd6fd10.jpg | Bin [31m24564[m -> [32m0[m bytes
 UI_Vector/reference/Andrei Simion (1).jpg          | Bin [31m12644[m -> [32m0[m bytes
 UI_Vector/reference/Andrei Simion (2).jpg          | Bin [31m12963[m -> [32m0[m bytes
 UI_Vector/reference/Andrei Simion.jpg              | Bin [31m12644[m -> [32m0[m bytes
 UI_Vector/reference/Color hexadecimal value.jpg    | Bin [31m28625[m -> [32m0[m bytes
 ... Login Page Design Using Flutter In Android.jpg | Bin [31m40082[m -> [32m0[m bytes
 .../reference/color palette _ red spotlight.jpg    | Bin [31m39848[m -> [32m0[m bytes
 ...color palette and schemes for designers (1).jpg | Bin [31m644153[m -> [32m0[m bytes
 .../color palette and schemes for designers.jpg    | Bin [31m643697[m -> [32m0[m bytes
 UI_Vector/reference/free-icon-copy-5993921.png     | Bin [31m5450[m -> [32m0[m bytes
 .../reference/orange, gray, black and white.jpg    | Bin [31m25917[m -> [32m0[m bytes
 ...el Rovira \360\237\230\272\360\237\244\230.jpg" | Bin [31m19265[m -> [32m0[m bytes
 ...20\262\320\260\320\275\320\270\321\217 (2).jpg" | Bin [31m11740[m -> [32m0[m bytes
 ...67\320\262\320\260\320\275\320\270\321\217.jpg" | Bin [31m32889[m -> [32m0[m bytes
 bg_scissors.svg                                    |  50 [31m----[m
 fonts/rubik/Rubik-Bold.ttf                         | Bin [31m208320[m -> [32m0[m bytes
 fonts/rubik/Rubik-Light.ttf                        | Bin [31m206700[m -> [32m0[m bytes
 fonts/rubik/Rubik-LightItalic.ttf                  | Bin [31m205676[m -> [32m0[m bytes
 fonts/rubik/Rubik-Medium.ttf                       | Bin [31m208204[m -> [32m0[m bytes
 fonts/rubik/Rubik-Regular.ttf                      | Bin [31m207632[m -> [32m0[m bytes
 icon scissors.png                                  | Bin [31m31362[m -> [32m0[m bytes
 icon scissors_1.png                                | Bin [31m32656[m -> [32m0[m bytes
 img/icon scissors.png                              | Bin [31m31362[m -> [32m0[m bytes
 img/icon.ico                                       | Bin [31m114722[m -> [32m0[m bytes
 lite_upgrade.py                                    | 114 [32m++++++++[m
 main.spec                                          |  39 [31m---[m
 njrty.txt                                          |   1 [31m-[m
 pyproject.toml                                     |  32 [32m+++[m
 pytest.ini                                         |  14 [32m+[m
 requirements-dev.txt                               |   6 [32m+[m
 requirements.txt                                   |   7 [32m+[m
 scripts/smoke_shortening.py                        |  17 [32m++[m
 tests/conftest.py                                  | 102 [32m++++++++[m
 tests/test_circuit.py                              | 197 [32m++++++++++++++[m
 tests/test_fingerprint.py                          |  23 [32m++[m
 tests/test_handlers_unit.py                        | 288 [32m+++++++++++++++++++++[m
 tests/test_internet_ok.py                          |  45 [32m++++[m
 tests/test_internet_ok_logging.py                  |  42 [32m+++[m
 tests/test_main_smoke.py                           |  81 [32m++++++[m
 tests/test_normalize_url.py                        |  23 [32m++[m
 tests/test_normalize_url_extra.py                  |  28 [32m++[m
 tests/test_setup_logging.py                        |  26 [32m++[m
 tests/test_shorten_success.py                      |  17 [32m++[m
 tests/test_shorten_timeout.py                      |  28 [32m++[m
 tests/test_shorten_tinyurl.py                      |  51 [32m++++[m
 tests/test_shortener.py                            | 122 [32m+++++++++[m
 tests/test_smoke.py                                |   2 [32m+[m
 tests/test_ui_builders_smoke.py                    |  25 [32m++[m
 url_cutter.py                                      | 149 [32m+++++[m[31m------[m
 url_cutter.spec                                    |  39 [31m---[m
 urlcutter/__init__.py                              |  14 [32m+[m
 urlcutter/assets/__init__.py                       |   0
 urlcutter/handlers.py                              | 257 [32m++++++++++++++++++[m
 urlcutter/logging_utils.py                         |  46 [32m++++[m
 urlcutter/normalization.py                         |  54 [32m++++[m
 urlcutter/protection.py                            | 117 [32m+++++++++[m
 urlcutter/shorteners.py                            | 102 [32m++++++++[m
 urlcutter/ui_builders.py                           | 164 [32m++++++++++++[m
 ver1.5.py                                          | 138 [32m++++[m[31m------[m
 66 files changed, 2276 insertions(+), 305 deletions(-)

[1mdiff --git a/.coveragerc b/.coveragerc[m
[1mnew file mode 100644[m
[1mindex 0000000..2f0cd39[m
[1m--- /dev/null[m
[1m+++ b/.coveragerc[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m[run][m
[32m+[m[32mbranch = True[m
[32m+[m[32msource = .[m
[32m+[m[32momit =[m
[32m+[m[32m    tests/*[m
[32m+[m[32m    .venv/*[m
[32m+[m[32m    venv/*[m
[32m+[m[32m    ver1.5.py[m
[32m+[m[32m    url_cutter.py[m
[32m+[m
[32m+[m[32m[report][m
[32m+[m[32mskip_empty = True[m
[32m+[m[32mshow_missing = True[m
[32m+[m[32mfail_under = 0[m
\ No newline at end of file[m
[1mdiff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..92ec089[m
[1m--- /dev/null[m
[1m+++ b/.github/workflows/ci.yml[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mname: CI[m
[32m+[m
[32m+[m[32mon:[m
[32m+[m[32m  push:[m
[32m+[m[32m    branches: [ main, master ][m
[32m+[m[32m  pull_request:[m
[32m+[m
[32m+[m[32mjobs:[m
[32m+[m[32m  lint-and-test:[m
[32m+[m[32m    runs-on: ubuntu-latest[m
[32m+[m
[32m+[m[32m    steps:[m
[32m+[m[32m      - name: Checkout[m
[32m+[m[32m        uses: actions/checkout@v4[m
[32m+[m
[32m+[m[32m      - name: Set up Python[m
[32m+[m[32m        uses: actions/setup-python@v5[m
[32m+[m[32m        with:[m
[32m+[m[32m          python-version: '3.13.2'[m
[32m+[m[32m          cache: 'pip'[m
[32m+[m
[32m+[m[32m      - name: Install deps[m
[32m+[m[32m        run: |[m
[32m+[m[32m          python -m pip install --upgrade pip[m
[32m+[m[32m          pip install -r requirements.txt[m
[32m+[m[32m          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi[m
[32m+[m[32m          # pre-commit hooks need to install their envs[m
[32m+[m[32m          pre-commit install[m
[32m+[m
[32m+[m[32m      - name: Pre-commit (ruff/black/etc)[m
[32m+[m[32m        run: pre-commit run --all-files[m
[32m+[m
[32m+[m[32m      - name: Tests with coverage[m
[32m+[m[32m        run: pytest -q --cov --cov-report=xml[m
[32m+[m
[32m+[m[32m      - name: Upload coverage.xml[m
[32m+[m[32m        if: always()[m
[32m+[m[32m        uses: actions/upload-artifact@v4[m
[32m+[m[32m        with:[m
[32m+[m[32m          name: coverage-xml[m
[32m+[m[32m          path: coverage.xml[m
[32m+[m
[32m+[m[32m      - name: Upload logs if failed[m
[32m+[m[32m        if: failure()[m
[32m+[m[32m        uses: actions/upload-artifact@v4[m
[32m+[m[32m        with:[m
[32m+[m[32m          name: run-artifacts[m
[32m+[m[32m          path: |[m
[32m+[m[32m            logs/**[m
[32m+[m[32m            screenshots/**[m
[32m+[m[32m          if-no-files-found: ignore[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex c7813c3..8ade01b 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,18 +1,30 @@[m
[31m-# Python[m
[32m+[m[32m# venv & caches[m
[32m+[m[32m.venv/[m
 __pycache__/[m
[31m-*.py[cod][m
[31m-*.egg-info/[m
[31m-dist/[m
[32m+[m[32m.pytest_cache/[m
[32m+[m[32m.ruff_cache/[m
[32m+[m
[32m+[m[32m# build / dist artifacts[m
 build/[m
[31m-*.pyc[m
[32m+[m[32mdist/[m
[32m+[m[32m*.egg-info/[m
 [m
[31m-# Virtual environment[m
[31m-.venv/[m
[31m-env/[m
[31m-venv/[m
[32m+[m[32m# coverage / reports[m
[32m+[m[32mhtmlcov/[m
[32m+[m[32m.coverage*[m
[32m+[m[32m.coverage/[m
[32m+[m[32mcoverage.xml[m
 [m
[31m-# PyCharm[m
[32m+[m[32m# logs / temp / screenshots[m
[32m+[m[32mlogs/[m
[32m+[m[32mscreenshots/[m
[32m+[m
[32m+[m[32m# editor / OS[m
 .idea/[m
[32m+[m[32m.vscode/[m
[32m+[m[32m.DS_Store[m
[32m+[m[32mThumbs.db[m
 [m
[31m-# –ò—Å–∫–ª—é—á–∞–µ–º token.txt[m
[31m-token.txt[m
\ No newline at end of file[m
[32m+[m[32m# Python bytecode[m
[32m+[m[32m*.pyc[m
[32m+[m[32m*.pyo[m
[1mdiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml[m
[1mnew file mode 100644[m
[1mindex 0000000..27b5856[m
[1m--- /dev/null[m
[1m+++ b/.pre-commit-config.yaml[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mrepos:[m
[32m+[m[32m  - repo: https://github.com/astral-sh/ruff-pre-commit[m
[32m+[m[32m    rev: v0.5.6[m
[32m+[m[32m    hooks:[m
[32m+[m[32m      - id: ruff[m
[32m+[m[32m        args: [--fix][m
[32m+[m
[32m+[m[32m  - repo: https://github.com/psf/black[m
[32m+[m[32m    rev: 24.8.0[m
[32m+[m[32m    hooks:[m
[32m+[m[32m      - id: black[m
[32m+[m[32m        args: [--line-length=120][m
[32m+[m
[32m+[m[32m  - repo: https://github.com/pre-commit/pre-commit-hooks[m
[32m+[m[32m    rev: v4.6.0[m
[32m+[m[32m    hooks:[m
[32m+[m[32m      - id: end-of-file-fixer[m
[32m+[m[32m      - id: trailing-whitespace[m
[1mdiff --git a/CHANGELOG.md b/CHANGELOG.md[m
[1mnew file mode 100644[m
[1mindex 0000000..2d8ef6e[m
[1m--- /dev/null[m
[1m+++ b/CHANGELOG.md[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m## [0.1.0] - 2025-08-21[m
[32m+[m[32m- –ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑: Flet GUI, TinyURL, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –∑–∞—â–∏—Ç–∞, —é–Ω–∏—Ç‚Äë—Ç–µ—Å—Ç—ã.[m
\ No newline at end of file[m
[1mdiff --git a/UI_Vector/Backup_of_Koteyka.cdr b/UI_Vector/Backup_of_Koteyka.cdr[m
[1mdeleted file mode 100644[m
[1mindex 7620780..0000000[m
Binary files a/UI_Vector/Backup_of_Koteyka.cdr and /dev/null differ
[1mdiff --git a/UI_Vector/Koteyka.cdr b/UI_Vector/Koteyka.cdr[m
[1mdeleted file mode 100644[m
[1mindex fd4eb5c..0000000[m
Binary files a/UI_Vector/Koteyka.cdr and /dev/null differ
[1mdiff --git a/UI_Vector/reference/7b849c98e3011ee6e1593518fbd6fd10.jpg b/UI_Vector/reference/7b849c98e3011ee6e1593518fbd6fd10.jpg[m
[1mdeleted file mode 100644[m
[1mindex e5d1037..0000000[m
Binary files a/UI_Vector/reference/7b849c98e3011ee6e1593518fbd6fd10.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/Andrei Simion (1).jpg b/UI_Vector/reference/Andrei Simion (1).jpg[m
[1mdeleted file mode 100644[m
[1mindex 0aec11d..0000000[m
Binary files a/UI_Vector/reference/Andrei Simion (1).jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/Andrei Simion (2).jpg b/UI_Vector/reference/Andrei Simion (2).jpg[m
[1mdeleted file mode 100644[m
[1mindex 7650355..0000000[m
Binary files a/UI_Vector/reference/Andrei Simion (2).jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/Andrei Simion.jpg b/UI_Vector/reference/Andrei Simion.jpg[m
[1mdeleted file mode 100644[m
[1mindex 0aec11d..0000000[m
Binary files a/UI_Vector/reference/Andrei Simion.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/Color hexadecimal value.jpg b/UI_Vector/reference/Color hexadecimal value.jpg[m
[1mdeleted file mode 100644[m
[1mindex e4b5f87..0000000[m
Binary files a/UI_Vector/reference/Color hexadecimal value.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/How To Create Login Page Design Using Flutter In Android.jpg b/UI_Vector/reference/How To Create Login Page Design Using Flutter In Android.jpg[m
[1mdeleted file mode 100644[m
[1mindex d05767a..0000000[m
Binary files a/UI_Vector/reference/How To Create Login Page Design Using Flutter In Android.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/color palette _ red spotlight.jpg b/UI_Vector/reference/color palette _ red spotlight.jpg[m
[1mdeleted file mode 100644[m
[1mindex 81ace76..0000000[m
Binary files a/UI_Vector/reference/color palette _ red spotlight.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/color palette and schemes for designers (1).jpg b/UI_Vector/reference/color palette and schemes for designers (1).jpg[m
[1mdeleted file mode 100644[m
[1mindex d656f9f..0000000[m
Binary files a/UI_Vector/reference/color palette and schemes for designers (1).jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/color palette and schemes for designers.jpg b/UI_Vector/reference/color palette and schemes for designers.jpg[m
[1mdeleted file mode 100644[m
[1mindex c9094a8..0000000[m
Binary files a/UI_Vector/reference/color palette and schemes for designers.jpg and /dev/null differ
[1mdiff --git a/UI_Vector/reference/free-icon-copy-5993921.png b/UI_Vector/reference/free-icon-copy-5993921.png[m
[1mdeleted file mode 100644[m
[1mindex a95acb2..0000000[m
Binary files a/UI_Vector/reference/free-icon-copy-5993921.png and /dev/null differ
[1mdiff --git a/UI_Vector/reference/orange, gray, black and white.jpg b/UI_Vector/reference/orange, gray, black and white.jpg[m
[1mdeleted file mode 100644[m
[1mindex 5b6eb1e..0000000[m
Binary files a/UI_Vector/reference/orange, gray, black and white.jpg and /dev/null differ
[1mdiff --git "a/UI_Vector/reference/ui-ux-design-web-trending-2019-manuel-rovira-designer-behance-lusaxweb-vuesax-trend-illustration-iso_png by Manuel Rovira \360\237\230\272\360\237\244\230.jpg" "b/UI_Vector/reference/ui-ux-design-web-trending-2019-manuel-rovira-designer-behance-lusaxweb-vuesax-trend-illustration-iso_png by Manuel Rovira \360\237\230\272\360\237\244\230.jpg"[m
[1mdeleted file mode 100644[m
[1mindex b45421f..0000000[m
Binary files "a/UI_Vector/reference/ui-ux-design-web-trending-2019-manuel-rovira-designer-behance-lusaxweb-vuesax-trend-illustration-iso_png by Manuel Rovira \360\237\230\272\360\237\244\230.jpg" and /dev/null differ
[1mdiff --git "a/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217 (2).jpg" "b/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217 (2).jpg"[m
[1mdeleted file mode 100644[m
[1mindex fbbd75a..0000000[m
Binary files "a/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217 (2).jpg" and /dev/null differ
[1mdiff --git "a/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217.jpg" "b/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217.jpg"[m
[1mdeleted file mode 100644[m
[1mindex 86c8c2c..0000000[m
Binary files "a/UI_Vector/reference/\320\221\320\265\320\267 \320\275\320\260\320\267\320\262\320\260\320\275\320\270\321\217.jpg" and /dev/null differ
[1mdiff --git a/bg_scissors.svg b/bg_scissors.svg[m
[1mdeleted file mode 100644[m
[1mindex a4441b8..0000000[m
[1m--- a/bg_scissors.svg[m
[1m+++ /dev/null[m
[36m@@ -1,50 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">[m
[31m-<!-- Creator: CorelDRAW -->[m
[31m-<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" width="162.56mm" height="91.44mm" version="1.1" style="shape-rendering:geometricPrecision; text-rendering:geometricPrecision; image-rendering:optimizeQuality; fill-rule:evenodd; clip-rule:evenodd"[m
[31m-viewBox="0 0 16256 9144"[m
[31m- xmlns:xlink="http://www.w3.org/1999/xlink"[m
[31m- xmlns:xodm="http://www.corel.com/coreldraw/odm/2003">[m
[31m- <defs>[m
[31m-  <style type="text/css">[m
[31m-   <![CDATA[[m
[31m-    .fil1 {fill:#151419}[m
[31m-    .fil3 {fill:#3C1E68}[m
[31m-    .fil2 {fill:#635AD9}[m
[31m-    .fil4 {fill:#7C52C4}[m
[31m-    .fil0 {fill:#908AE4}[m
[31m-   ]]>[m
[31m-  </style>[m
[31m-    <clipPath id="id0">[m
[31m-     <path d="M52761.41 36538.47l5542.96 0 0 5526.43 -5542.96 0 0 -5526.43z"/>[m
[31m-    </clipPath>[m
[31m- </defs>[m
[31m- <g id="Layer_x0020_1">[m
[31m-  <metadata id="CorelCorpID_0Corel-Layer"/>[m
[31m-  <g id="_2719071121840">[m
[31m-   <g style="clip-path:url(#id0)">[m
[31m-    <image x="52761.41" y="36538.47" width="5542.96" height="5526.43" xlink:href="scissors_Images\scissors_ImgID1.png"/>[m
[31m-   </g>[m
[31m-  </g>[m
[31m-  <g id="_2719071121696">[m
[31m-   <g>[m
[31m-    <path class="fil0" d="M55101.89 38449.14l354.32 979.32c15.84,43.78 64.63,66.64 108.41,50.8l207.01 -74.9c43.76,-15.83 66.64,-64.65 50.81,-108.4l-308.89 -853.75c-25.92,-71.64 -161.8,-173.48 -265.31,-136.04l-95.54 34.57c-43.79,15.84 -66.65,64.62 -50.81,108.4z"/>[m
[31m-    <path id="_1" class="fil1" d="M55101.89 38449.14l354.32 979.32c15.84,43.78 64.63,66.64 108.41,50.8l207.01 -74.9c43.76,-15.83 66.64,-64.65 50.81,-108.4l-308.89 -853.75c-25.92,-71.64 -161.8,-173.48 -265.31,-136.04l-95.54 34.57c-43.79,15.84 -66.65,64.62 -50.81,108.4zm298.75 999.46l-354.32 -979.32 -3.7 -10.23 0 -1.56c-8.98,-33.58 -5.14,-68.2 8.83,-98.03 15.65,-33.4 43.95,-60.85 81.1,-74.29l10.22 -3.7 0.02 0 85.31 -30.87c63.65,-23.01 133.07,-9.31 192.73,21.27 70.08,35.93 129.5,98.25 148.29,150.2l308.89 853.75 3.7 10.22 0 1.57c8.99,33.58 5.13,68.19 -8.85,98.02 -15.65,33.39 -43.96,60.88 -81.08,74.3l-10.23 3.7 -0.01 0 -196.78 71.2c-37.18,13.45 -76.49,10.47 -109.82,-5.13 -33.38,-15.64 -60.86,-43.95 -74.3,-81.1z"/>[m
[31m-   </g>[m
[31m-   <path class="fil2" d="M55101.89 38449.14l116.59 322.25c-42.74,-118.15 353.68,-167.19 382.16,-88.48l-87.09 -240.7c-25.91,-71.63 -161.8,-173.48 -265.31,-136.04l-95.54 34.57c-43.79,15.84 -66.65,64.62 -50.81,108.4z"/>[m
[31m-   <g>[m
[31m-    <path class="fil3" d="M55194.1 40022.98c80.34,222.05 325.48,336.93 547.53,256.59 222.06,-80.33 336.94,-325.47 256.6,-547.53l-76.33 -210.97 -44.06 -121.79 -108.61 -300.19c-15.85,-43.8 -64.63,-66.65 -108.42,-50.81l-238.86 86.42c-43.8,15.85 -66.66,64.64 -50.81,108.41 19.81,54.72 36.6,95.32 56.98,149.47 16.7,44.39 -6.53,94.23 -76.73,137.36 -159.33,97.91 -218.14,309.67 -160.55,483.64l3.26 9.4zm461.4 -603.61c68.15,-24.66 103.41,-99.9 78.75,-168.05 -24.66,-68.16 -99.89,-103.42 -168.05,-78.76 -152.12,69.48 -83.07,257.52 46.39,254.22 16.44,-0.43 27.23,-3.15 42.91,-7.41zm-246.44 525.83c37.39,103.34 151.46,156.8 254.8,119.41 103.33,-37.39 156.79,-151.46 119.41,-254.79 -43.66,-102.57 -138.92,-155.19 -247.08,-121.27 -87.85,27.55 -137.09,99.19 -139.05,190.28 0.17,24.83 4.22,42.98 11.92,66.37z"/>[m
[31m-    <path id="_1_0" class="fil1" d="M55194.1 40022.98c80.34,222.05 325.48,336.93 547.53,256.59 222.06,-80.33 336.94,-325.47 256.6,-547.53l-76.33 -210.97 -44.06 -121.79 -108.61 -300.19c-15.85,-43.8 -64.63,-66.65 -108.42,-50.81l-238.86 86.42c-43.8,15.85 -66.66,64.64 -50.81,108.41 19.81,54.72 36.6,95.32 56.98,149.47 16.7,44.39 -6.53,94.23 -76.73,137.36 -159.33,97.91 -218.14,309.67 -160.55,483.64l3.26 9.4zm461.4 -603.61c68.15,-24.66 103.41,-99.9 78.75,-168.05 -24.66,-68.16 -99.89,-103.42 -168.05,-78.76 -152.12,69.48 -83.07,257.52 46.39,254.22 16.44,-0.43 27.23,-3.15 42.91,-7.41zm-246.44 525.83c37.39,103.34 151.46,156.8 254.8,119.41 103.33,-37.39 156.79,-151.46 119.41,-254.79 -43.66,-102.57 -138.92,-155.19 -247.08,-121.27 -87.85,27.55 -137.09,99.19 -139.05,190.28 0.17,24.83 4.22,42.98 11.92,66.37zm-19.34 372.95c-112.84,-52.88 -205.5,-148.76 -251.19,-275.03l-0.23 -0.92 -3.26 -9.4 -0.46 -0.7c-33.39,-100.85 -32.19,-213.08 1.15,-313.54 32.28,-97.24 94.54,-183.72 184.64,-239.09 25.39,-15.59 41.57,-30.69 49.34,-44.6 4.45,-7.98 5.39,-15.3 3.08,-21.45 -9.95,-26.44 -16.58,-43.46 -23.18,-60.45 -11.11,-28.56 -21.92,-56.34 -33.12,-87.17l-0.03 -0.07 -0.9 -2.5c-13.45,-37.15 -10.48,-76.47 5.13,-109.79 15.26,-32.55 42.55,-59.48 78.32,-73.26l0.3 -0.15 2.5 -0.9 238.86 -86.42c37.2,-13.45 76.5,-10.49 109.83,5.13 33.4,15.65 60.87,43.96 74.3,81.11l108.61 300.19 44.06 121.79 75.88 209.73 0.46 1.26c45.69,126.31 35.86,259.25 -17,372.03 -52.52,112.08 -147.45,204.23 -272.46,250.24l-0.09 0.04 -2.49 0.91c-126.33,45.7 -259.26,35.86 -372.05,-16.99zm248.76 -955.56c17.26,-7.14 30.37,-20.23 37.72,-35.94 7.82,-16.69 9.26,-36.44 2.48,-55.19 -6.8,-18.81 -20.51,-33.06 -37.14,-40.85 -16.19,-7.59 -35.26,-9.18 -53.51,-3.07 -26.34,12.7 -41.01,29.9 -46.55,47.73l-0.07 -0.02c-3.55,11.59 -3.58,23.89 -0.75,35.58 3.02,12.44 9.14,24.12 17.66,33.65 12.84,14.37 31.36,23.8 52.88,23.26 4.34,-0.11 8.24,-0.58 12.25,-1.34 2.79,-0.52 8.25,-1.97 15.03,-3.81zm-173.24 564.12c13.37,35.57 39.65,62.57 71.49,77.49 32.39,15.18 70.63,17.99 106.99,4.84 36.39,-13.16 63.98,-39.77 79.13,-72.1 14.93,-31.85 17.9,-69.38 5.48,-105.2 -16.62,-38.4 -42.01,-66.83 -72.59,-81.84 -28.88,-14.17 -63.9,-16.79 -101.95,-4.86 -30.84,9.67 -54.69,26.57 -70.81,48.63 -16.81,23 -26.01,52.42 -26.79,85.94 0.1,7.84 0.86,14.93 2.2,22.07 1.31,6.98 3.69,15.15 6.93,25l-0.08 0.03z"/>[m
[31m-   </g>[m
[31m-   <g>[m
[31m-    <path class="fil0" d="M54605.77 39060.96l1041.44 0c46.56,0 84.65,38.1 84.65,84.66l0 220.14c0,46.54 -38.12,84.66 -84.65,84.66l-907.91 0c-76.18,0 -218.18,-93.13 -218.18,-203.2l0 -101.6c0,-46.57 38.09,-84.66 84.65,-84.66z"/>[m
[31m-    <path id="_1_1" class="fil1" d="M54605.77 39001.69l1041.44 0c39.37,0 75.29,16.17 101.45,42.23l0.12 0.12 0.12 0.12c26.07,26.17 42.23,62.1 42.23,101.46l0 220.14c0,39.63 -16.19,75.64 -42.24,101.69l-0.12 -0.12c-26.17,26.13 -62.14,42.36 -101.56,42.36l-907.91 0c-55.27,0 -134.1,-34.68 -191.72,-88.36 -49.16,-45.78 -85.73,-106.44 -85.73,-174.11l0 -101.6c0,-39.64 16.18,-75.66 42.22,-101.7 26.06,-26.06 62.06,-42.23 101.7,-42.23zm0 59.27l1041.44 0c46.56,0 84.65,38.1 84.65,84.66l0 220.14c0,46.54 -38.12,84.66 -84.65,84.66l-907.91 0c-76.18,0 -218.18,-93.13 -218.18,-203.2l0 -101.6c0,-46.57 38.09,-84.66 84.65,-84.66z"/>[m
[31m-   </g>[m
[31m-   <path class="fil2" d="M54605.77 39060.96l342.69 0c-125.65,0 -36.89,389.46 46.81,389.46l-255.97 0c-76.17,0 -218.18,-93.13 -218.18,-203.2l0 -101.6c0,-46.57 38.09,-84.66 84.65,-84.66z"/>[m
[31m-   <g>[m
[31m-    <path class="fil4" d="M56117.09 38612.22c236.14,0 427.57,191.43 427.57,427.57 0,236.14 -191.43,427.57 -427.57,427.57l-224.36 0 -129.51 0 -319.24 0c-46.57,0 -84.66,-38.09 -84.66,-84.66l0 -254.02c0,-46.57 38.1,-84.67 84.66,-84.66 58.19,0.02 102.08,1.99 159.94,2.73 47.42,0.6 86.38,-38.2 103.06,-118.88 37.86,-183.14 216.98,-310.49 400.16,-315.52l9.95 -0.13zm-410.63 639.23c0,72.48 -58.75,131.23 -131.23,131.23 -72.48,0 -131.23,-58.75 -131.23,-131.23 13.58,-166.69 213.89,-165.73 254.83,-42.87 5.2,15.61 6.31,26.68 7.63,42.87zm410.63 -410.63c109.89,0 198.97,89.08 198.97,198.97 0,109.89 -89.08,198.97 -198.97,198.97 -111.3,-6.16 -193.19,-77.83 -198.09,-191.08 -3.98,-91.98 46.63,-162.66 131.62,-195.49 23.4,-8.29 41.85,-10.66 66.47,-11.37z"/>[m
[31m-    <path id="_1_2" class="fil1" d="M56117.09 38552.95c134.43,0 256.15,54.5 344.25,142.59 88.09,88.1 142.59,209.82 142.59,344.25 0,134.43 -54.5,256.15 -142.59,344.25 -88.1,88.09 -209.82,142.59 -344.25,142.59l-224.36 0 -129.51 0 -319.24 0c-39.36,0 -75.29,-16.16 -101.46,-42.23l-0.12 -0.12 -0.12 -0.12c-26.06,-26.16 -42.23,-62.08 -42.23,-101.46l0 -254.02 0 -0.02c0,-39.65 16.19,-75.65 42.23,-101.69l0.24 0c26.06,-26.04 61.97,-42.22 101.44,-42.22l0.02 0 0 0.23c35.97,0.01 65.54,0.72 95.95,1.44 21.15,0.49 42.76,1.01 64.68,1.29 6.57,0.08 13.12,-3.27 19.08,-10.15 10.66,-12.3 19.45,-32.65 25.41,-61.5 21.49,-103.99 81.54,-192.05 161.77,-255.31 82.86,-65.34 188.05,-104.52 294.65,-107.44l0.93 0 9.95 -0.13 0.69 -0.23zm0 59.27c236.14,0 427.57,191.43 427.57,427.57 0,236.14 -191.43,427.57 -427.57,427.57l-224.36 0 -129.51 0 -319.24 0c-46.57,0 -84.66,-38.09 -84.66,-84.66l0 -254.02c0,-46.57 38.1,-84.67 84.66,-84.66 58.19,0.02 102.08,1.99 159.94,2.73 47.42,0.6 86.38,-38.2 103.06,-118.88 37.86,-183.14 216.98,-310.49 400.16,-315.52l9.95 -0.13zm-410.63 639.23c0,72.48 -58.75,131.23 -131.23,131.23 -72.48,0 -131.23,-58.75 -131.23,-131.23 13.58,-166.69 213.89,-165.73 254.83,-42.87 5.2,15.61 6.31,26.68 7.63,42.87zm410.63 -410.63c109.89,0 198.97,89.08 198.97,198.97 0,109.89 -89.08,198.97 -198.97,198.97 -111.3,-6.16 -193.19,-77.83 -198.09,-191.08 -3.98,-91.98 46.63,-162.66 131.62,-195.49 23.4,-8.29 41.85,-10.66 66.47,-11.37zm-490.85 461.64c12.59,-12.66 20.51,-30.07 20.93,-49.4 -0.52,-6.32 -0.99,-11.34 -1.41,-14 -0.61,-3.83 -1.52,-7.61 -2.96,-11.96 -6.72,-20.16 -21.87,-34.25 -39.77,-41.44 -11.93,-4.79 -25.08,-6.59 -37.92,-5.19 -11.86,1.3 -23.37,5.55 -33.06,12.89 -14.74,11.17 -25.82,30.77 -28.76,59.94 0.49,19.14 8.45,36.43 21.06,49.04 13.01,13.01 31.01,21.07 50.88,21.07 19.97,0 38,-8.01 51.01,-20.95zm589.63 -361.69c-25.12,-25.13 -60.04,-40.68 -98.78,-40.68l0 -0.18c-9.09,0.3 -17,0.9 -24.43,2.09 -6.64,1.07 -13.77,2.95 -22.36,5.99l-0.02 -0.06c-30.79,12.2 -54.93,30.66 -70.55,53.88 -15.29,22.72 -23.09,50.95 -21.69,83.32 1.71,39.63 16.1,71.57 39.27,93.92 24.26,23.4 58.95,37.6 99.78,40.46l0 -0.02c38.74,0 73.66,-15.55 98.78,-40.68l0.24 -0.24c25.13,-25.12 40.68,-60.04 40.68,-98.78 0,-38.73 -15.56,-73.66 -40.68,-98.78l-0.24 -0.24z"/>[m
[31m-   </g>[m
[31m-  </g>[m
[31m- </g>[m
[31m-</svg>[m
[1mdiff --git a/fonts/rubik/Rubik-Bold.ttf b/fonts/rubik/Rubik-Bold.ttf[m
[1mdeleted file mode 100644[m
[1mindex 1a9693d..0000000[m
Binary files a/fonts/rubik/Rubik-Bold.ttf and /dev/null differ
[1mdiff --git a/fonts/rubik/Rubik-Light.ttf b/fonts/rubik/Rubik-Light.ttf[m
[1mdeleted file mode 100644[m
[1mindex 8a5a50a..0000000[m
Binary files a/fonts/rubik/Rubik-Light.ttf and /dev/null differ
[1mdiff --git a/fonts/rubik/Rubik-LightItalic.ttf b/fonts/rubik/Rubik-LightItalic.ttf[m
[1mdeleted file mode 100644[m
[1mindex b028d93..0000000[m
Binary files a/fonts/rubik/Rubik-LightItalic.ttf and /dev/null differ
[1mdiff --git a/fonts/rubik/Rubik-Medium.ttf b/fonts/rubik/Rubik-Medium.ttf[m
[1mdeleted file mode 100644[m
[1mindex f0bd595..0000000[m
Binary files a/fonts/rubik/Rubik-Medium.ttf and /dev/null differ
[1mdiff --git a/fonts/rubik/Rubik-Regular.ttf b/fonts/rubik/Rubik-Regular.ttf[m
[1mdeleted file mode 100644[m
[1mindex 8b7b632..0000000[m
Binary files a/fonts/rubik/Rubik-Regular.ttf and /dev/null differ
[1mdiff --git a/icon scissors.png b/icon scissors.png[m
[1mdeleted file mode 100644[m
[1mindex b4ae8c1..0000000[m
Binary files a/icon scissors.png and /dev/null differ
[1mdiff --git a/icon scissors_1.png b/icon scissors_1.png[m
[1mdeleted file mode 100644[m
[1mindex 3b64882..0000000[m
Binary files a/icon scissors_1.png and /dev/null differ
[1mdiff --git a/img/icon scissors.png b/img/icon scissors.png[m
[1mdeleted file mode 100644[m
[1mindex b4ae8c1..0000000[m
Binary files a/img/icon scissors.png and /dev/null differ
[1mdiff --git a/img/icon.ico b/img/icon.ico[m
[1mdeleted file mode 100644[m
[1mindex 6edffb4..0000000[m
Binary files a/img/icon.ico and /dev/null differ
[1mdiff --git a/lite_upgrade.py b/lite_upgrade.py[m
[1mnew file mode 100644[m
[1mindex 0000000..79fafc0[m
[1m--- /dev/null[m
[1m+++ b/lite_upgrade.py[m
[36m@@ -0,0 +1,114 @@[m
[32m+[m[32m# 1) Imports[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m[32mimport os[m
[32m+[m[32mfrom concurrent.futures import ThreadPoolExecutor[m
[32m+[m
[32m+[m[32m# —è–¥—Ä–æ[m
[32m+[m[32mfrom urlcutter import normalize_url, _url_fingerprint[m
[32m+[m[32mfrom urlcutter import ([m
[32m+[m[32m    AppState,                       # –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è (–≤–∞–∂–Ω–æ –¥–ª—è monkeypatch –≤ —Ç–µ—Å—Ç–∞—Ö)[m
[32m+[m[32m    internet_ok as _internet_ok_core,[m
[32m+[m[32m    circuit_blocked, cooldown_left,[m
[32m+[m[32m    record_failure, record_success,[m
[32m+[m[32m    rate_limit_allow, _get_state, _reset_state,[m
[32m+[m[32m    CLIENT_RPM_LIMIT, CB_FAIL_THRESHOLD, CB_COOLDOWN_SEC,[m
[32m+[m[32m    CIRCUIT_FAIL_THRESHOLD, CIRCUIT_COOLDOWN_SEC, RATE_LIMIT_WINDOW_SEC,[m
[32m+[m[32m)[m
[32m+[m[32mfrom urlcutter import shorten_via_tinyurl_core as _shorten_core[m
[32m+[m[32mfrom urlcutter.logging_utils import setup_logging[m
[32m+[m
[32m+[m
[32m+[m[32m# 2) –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã / –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è[m
[32m+[m[32mREQUEST_TIMEOUT = 8.0[m
[32m+[m[32mRETRIES = 1[m
[32m+[m
[32m+[m[32m# ---- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç –∫–∞–ø–æ–≤ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ----[m
[32m+[m[32mCONNECTIVITY_PROBE_URL = "https://www.google.com/generate_204"[m
[32m+[m[32mCONNECTIVITY_TIMEOUT = 2.0  # –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ç–∏[m
[32m+[m
[32m+[m[32m# ---- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ----[m
[32m+[m[32mLOG_ENABLED = True[m
[32m+[m[32mLOG_DEBUG = os.getenv("URLCUTTER_DEBUG") == "1"[m
[32m+[m[32mLOG_FILE = "logs/app.log"[m
[32m+[m[32mLOG_MAX_BYTES = 1_000_000[m
[32m+[m[32mLOG_BACKUPS = 3[m
[32m+[m
[32m+[m
[32m+[m[32m# –ø—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –¥–µ—Ä–≥–∞—é—Ç —Ç–µ—Å—Ç—ã[m
[32m+[m[32mdef internet_ok(logger):[m
[32m+[m[32m    return _internet_ok_core(logger, AppState_cls=AppState)[m
[32m+[m
[32m+[m[32m# shorten_via_tinyurl –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π ThreadPoolExecutor,[m
[32m+[m[32m# —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ monkeypatch'–∏—Ç—å —á–µ—Ä–µ–∑ lite_upgrade.ThreadPoolExecutor.[m
[32m+[m[32mdef shorten_via_tinyurl([m
[32m+[m[32m    url: str,[m
[32m+[m[32m    timeout: float | None = None,[m
[32m+[m[32m    *,[m
[32m+[m[32m    _get=None,[m
[32m+[m[32m    _shortener_factory=None,[m
[32m+[m[32m    _pool_factory=None,[m
[32m+[m[32m) -> str:[m
[32m+[m[32m    pool_factory = _pool_factory or ThreadPoolExecutor[m
[32m+[m[32m    return _shorten_core([m
[32m+[m[32m        url,[m
[32m+[m[32m        timeout,[m
[32m+[m[32m        _get=_get,[m
[32m+[m[32m        _shortener_factory=_shortener_factory,[m
[32m+[m[32m        _pool_factory=pool_factory,[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m
[32m+[m[32m# 8) –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ ¬´–ø—Ä–æ–≤–æ–¥–∞¬ª)[m
[32m+[m[32mdef main(page):  # –º–æ–∂–Ω–æ –±–µ–∑ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –¥–µ—Ä–∂–∞—Ç—å Flet –Ω–∞ –∏–º–ø–æ—Ä—Ç–µ[m
[32m+[m[32m    from urlcutter.handlers import Handlers[m
[32m+[m[32m    from urlcutter.ui_builders import ([m
[32m+[m[32m        configure_window_and_theme, build_header, build_title_bar, build_footer,[m
[32m+[m[32m        build_inputs, build_buttons, compose_page[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    logger = setup_logging(enabled=LOG_ENABLED, debug=LOG_DEBUG)[m
[32m+[m[32m    configure_window_and_theme(page)[m
[32m+[m
[32m+[m[32m    # UI ‚Äî —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç—Ä–æ–ª—ã –û–î–ò–ù —Ä–∞–∑, –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ –±–∏–ª–¥–µ—Ä–æ–≤[m
[32m+[m[32m    header_col = build_header()[m
[32m+[m[32m    title_bar, info_btn, minimize_btn, close_btn = build_title_bar()  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º row –∏ –∫–Ω–æ–ø–∫–∏[m
[32m+[m[32m    url_input_field, short_url_field = build_inputs()  # suffix –±–µ–∑ on_click[m
[32m+[m[32m    button_row, shorten_button, clear_button, copy_button = build_buttons()  # –∫–Ω–æ–ø–∫–∏ –±–µ–∑ on_click[m
[32m+[m[32m    footer_container = build_footer()[m
[32m+[m
[32m+[m[32m    # –ö–æ–º–ø–æ–Ω—É–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É[m
[32m+[m[32m    root = compose_page([m
[32m+[m[32m        title_bar,[m
[32m+[m[32m        header_col,[m
[32m+[m[32m        url_input_field,[m
[32m+[m[32m        short_url_field,[m
[32m+[m[32m        button_row,  # <-- –≤–º–µ—Å—Ç–æ dummy_button_row[m
[32m+[m[32m        footer_container,[m
[32m+[m[32m    )[m
[32m+[m[32m    page.add(root)[m
[32m+[m
[32m+[m[32m    # –°–æ—Å—Ç–æ—è–Ω–∏–µ + –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–ø–æ–ª—É—á–∞—é—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –¢–ï –ñ–ï –∫–æ–Ω—Ç—Ä–æ–ª—ã)[m
[32m+[m[32m    state = AppState()[m
[32m+[m[32m    handlers = Handlers([m
[32m+[m[32m        page, logger, state, url_input_field, short_url_field, shorten_button[m
[32m+[m[32m    )  # <-- –≤–º–µ—Å—Ç–æ dummy_cut_btn[m
[32m+[m
[32m+[m[32m    # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –∫ –¢–ï–ú –ñ–ï —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º –∫–æ–Ω—Ç—Ä–æ–ª–æ–≤ (–±–µ–∑ –ª—è–º–±–¥)[m
[32m+[m[32m    url_input_field.suffix.on_click = handlers.on_paste[m
[32m+[m
[32m+[m[32m    shorten_button.on_click = handlers.on_shorten[m
[32m+[m[32m    clear_button.on_click = handlers.on_clear[m
[32m+[m[32m    copy_button.on_click = handlers.on_copy[m
[32m+[m
[32m+[m[32m    info_btn.on_click = handlers.on_open_info[m
[32m+[m[32m    minimize_btn.on_click = handlers.on_minimize[m
[32m+[m[32m    close_btn.on_click = handlers.on_close[m
[32m+[m
[32m+[m[32m    page.update()[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == "__main__":  # pragma: no cover[m
[32m+[m[32m    import multiprocessing as mp[m
[32m+[m[32m    mp.freeze_support()[m
[32m+[m[32m    import flet as ft[m
[32m+[m[32m    ft.app(target=main, view=ft.AppView.FLET_APP)[m
[1mdiff --git a/main.spec b/main.spec[m
[1mdeleted file mode 100644[m
[1mindex 4a6b126..0000000[m
[1m--- a/main.spec[m
[1m+++ /dev/null[m
[36m@@ -1,39 +0,0 @@[m
[31m-# -*- mode: python ; coding: utf-8 -*-[m
[31m-[m
[31m-[m
[31m-a = Analysis([m
[31m-    ['main.py'],[m
[31m-    pathex=[],[m
[31m-    binaries=[],[m
[31m-    datas=[],[m
[31m-    hiddenimports=[],[m
[31m-    hookspath=[],[m
[31m-    hooksconfig={},[m
[31m-    runtime_hooks=[],[m
[31m-    excludes=[],[m
[31m-    noarchive=False,[m
[31m-    optimize=0,[m
[31m-)[m
[31m-pyz = PYZ(a.pure)[m
[31m-[m
[31m-exe = EXE([m
[31m-    pyz,[m
[31m-    a.scripts,[m
[31m-    a.binaries,[m
[31m-    a.datas,[m
[31m-    [],[m
[31m-    name='main',[m
[31m-    debug=False,[m
[31m-    bootloader_ignore_signals=False,[m
[31m-    strip=False,[m
[31m-    upx=True,[m
[31m-    upx_exclude=[],[m
[31m-    runtime_tmpdir=None,[m
[31m-    console=False,[m
[31m-    disable_windowed_traceback=False,[m
[31m-    argv_emulation=False,[m
[31m-    target_arch=None,[m
[31m-    codesign_identity=None,[m
[31m-    entitlements_file=None,[m
[31m-    icon=['C:\\Users\\Administrator\\PycharmProjects\\Apps\\Url_Cutter\\img\\icon scissors.png'],[m
[31m-)[m
[1mdiff --git a/njrty.txt b/njrty.txt[m
[1mdeleted file mode 100644[m
[1mindex 2c3a2ae..0000000[m
[1m--- a/njrty.txt[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-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[m
\ No newline at end of file[m
[1mdiff --git a/pyproject.toml b/pyproject.toml[m
[1mnew file mode 100644[m
[1mindex 0000000..9dd4f51[m
[1m--- /dev/null[m
[1m+++ b/pyproject.toml[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m[tool.black][m
[32m+[m[32mline-length = 120[m
[32m+[m[32m# –î–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–≤–∏–º py311: black –∏–Ω–æ–≥–¥–∞ –æ—Ç—Å—Ç–∞—ë—Ç –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ py313.[m
[32m+[m[32m# –ï—Å–ª–∏ –≤—Å—ë –æ–∫ –Ω–∞ —Ç–≤–æ–µ–π –≤–µ—Ä—Å–∏–∏ black, –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å –Ω–∞ ["py313"].[m
[32m+[m[32mtarget-version = ["py311"][m
[32m+[m
[32m+[m[32m[tool.ruff][m
[32m+[m[32mline-length = 120[m
[32m+[m[32m# ruff —É–∂–µ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç 3.13 ‚Äî –≤–∫–ª—é—á–∞–µ–º.[m
[32m+[m[32mtarget-version = "py313"[m
[32m+[m[32mextend-exclude = ["ver1.5.py"][m
[32m+[m
[32m+[m[32m[tool.ruff.lint][m
[32m+[m[32m# –ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä + —Ç–æ, —á—Ç–æ —É —Ç–µ–±—è —É–∂–µ –±—ã–ª–æ[m
[32m+[m[32mselect = ["E","F","I","UP","B","SIM","W","PL"][m
[32m+[m[32mignore = ["E203"]  # —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å black[m
[32m+[m
[32m+[m[32m[tool.ruff.lint.per-file-ignores][m
[32m+[m[32m"lite_upgrade.py" = ["PLR0915","PLR0912","PLR0911","PLR0913"][m
[32m+[m[32m"url_cutter.py"   = ["PLR0915"][m
[32m+[m
[32m+[m[32m[tool.ruff.lint.isort][m
[32m+[m[32m# –ß—Ç–æ–±—ã isort (—á–µ—Ä–µ–∑ ruff) –æ—Ç–Ω–æ—Å–∏–ª —Ç–≤–æ–π –º–æ–¥—É–ª—å –∫ first-party[m
[32m+[m[32mknown-first-party = ["url_cutter"][m
[32m+[m
[32m+[m[32m[tool.setuptools.package-data][m
[32m+[m[32murlcutter = ["assets/**/*"][m
[32m+[m
[32m+[m[32m[tool.bumpversion][m
[32m+[m[32mcurrent_version = "0.1.0"[m
[32m+[m[32mcommit = true[m
[32m+[m[32mtag = true[m
[1mdiff --git a/pytest.ini b/pytest.ini[m
[1mnew file mode 100644[m
[1mindex 0000000..db87619[m
[1m--- /dev/null[m
[1m+++ b/pytest.ini[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m[pytest][m
[32m+[m[32maddopts = -q --cov --cov-report=term-missing[m
[32m+[m[32mpythonpath = .[m
[32m+[m[32mtestpaths = tests[m
[32m+[m[32mpython_files = test_*.py[m
[32m+[m[32mpython_functions = test_*[m
[32m+[m
[32m+[m[32m[tool:pytest][m
[32m+[m[32maddopts = --cov=lite_upgrade[m
[32m+[m
[32m+[m[32m[coverage:run][m
[32m+[m[32momit =[m
[32m+[m[32m    # –ò—Å–∫–ª—é—á–∞–µ–º UI-—Å–ª–æ–π (–ø–æ–¥–≥–æ–Ω–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ–¥ —Å–≤–æ–π —Ñ–∞–π–ª; —É —Ç–µ–±—è UI –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è ~—Å 226 –¥–æ –∫–æ–Ω—Ü–∞)[m
[32m+[m[32m    lite_upgrade.py:226-9999[m
[1mdiff --git a/requirements-dev.txt b/requirements-dev.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..c5d638a[m
[1m--- /dev/null[m
[1m+++ b/requirements-dev.txt[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mpytest>=8.2[m
[32m+[m[32mpytest-mock>=3.14[m
[32m+[m[32mruff>=0.5[m
[32m+[m[32mblack>=24.8[m
[32m+[m[32mpre-commit>=3.7[m
[32m+[m[32mpytest-cov>=5.0[m
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..75ea937[m
[1m--- /dev/null[m
[1m+++ b/requirements.txt[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mflet~=0.28.3[m
[32m+[m[32mpyshorteners~=1.0.1[m
[32m+[m[32mvalidators~=0.35.0[m
[32m+[m[32mpyperclip~=1.9.0[m
[32m+[m[32mrequests~=2.32.4[m
[32m+[m
[32m+[m[32mpytest~=8.4.1[m
\ No newline at end of file[m
[1mdiff --git a/scripts/smoke_shortening.py b/scripts/smoke_shortening.py[m
[1mnew file mode 100644[m
[1mindex 0000000..29fadf8[m
[1m--- /dev/null[m
[1m+++ b/scripts/smoke_shortening.py[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m# –±—ã—Å—Ç—Ä—ã–π —Å–º–æ—É–∫ –±–µ–∑ —Å–µ—Ç–∏: –ø–æ–¥–º–µ–Ω–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏ –≤—ã–∑–æ–≤ —è–¥—Ä–∞[m
[32m+[m[32mimport lite_upgrade[m
[32m+[m
[32m+[m
[32m+[m[32mclass FakeTiny:[m
[32m+[m[32m    def short(self, u):[m
[32m+[m[32m        return "https://tinyurl.com/smoke"[m
[32m+[m
[32m+[m
[32m+[m[32mclass FakeShortener:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self.tinyurl = FakeTiny()[m
[32m+[m
[32m+[m
[32m+[m[32mlite_upgrade.pyshorteners.Shortener = lambda: FakeShortener()[m
[32m+[m
[32m+[m[32mprint(lite_upgrade.shorten_via_tinyurl("http://example.com", timeout=0.1))[m
[1mdiff --git a/tests/conftest.py b/tests/conftest.py[m
[1mnew file mode 100644[m
[1mindex 0000000..15dd713[m
[1m--- /dev/null[m
[1m+++ b/tests/conftest.py[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_shortener_ok_factory():[m
[32m+[m[32m    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ö–û–ù–°–¢–†–£–ö–¢–û–† (–Ω—É–ª–µ–∞—Ä–≥. callable), –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å .tinyurl.short(...)[m
[32m+[m[32m    def _factory():[m
[32m+[m[32m        class FakeTiny:[m
[32m+[m[32m            def short(self, url: str) -> str:[m
[32m+[m[32m                return "https://tiny.one/abc123"[m
[32m+[m[32m        class FakeShortener:[m
[32m+[m[32m            tinyurl = FakeTiny()[m
[32m+[m[32m        return FakeShortener()[m
[32m+[m[32m    return _factory[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_shortener_boom_factory():[m
[32m+[m[32m    def _factory():[m
[32m+[m[32m        class FakeTiny:[m
[32m+[m[32m            def short(self, url: str) -> str:[m
[32m+[m[32m                raise RuntimeError("boom")[m
[32m+[m[32m        class FakeShortener:[m
[32m+[m[32m            tinyurl = FakeTiny()[m
[32m+[m[32m        return FakeShortener()[m
[32m+[m[32m    return _factory[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_pool_timeout_factory():[m
[32m+[m[32m    # –ü—É–ª, —É –∫–æ—Ç–æ—Ä–æ–≥–æ future.result(...) –≤—Å–µ–≥–¥–∞ –∫–∏–¥–∞–µ—Ç TimeoutError[m
[32m+[m[32m    from concurrent.futures import TimeoutError[m
[32m+[m
[32m+[m[32m    class FakeFuture:[m
[32m+[m[32m        def result(self, timeout):[m
[32m+[m[32m            raise TimeoutError()[m
[32m+[m
[32m+[m[32m    class FakePool:[m
[32m+[m[32m        def __enter__(self):[m
[32m+[m[32m            return self[m
[32m+[m[32m        def __exit__(self, *a):[m
[32m+[m[32m            pass[m
[32m+[m[32m        def submit(self, fn, *args, **kwargs):[m
[32m+[m[32m            return FakeFuture()[m
[32m+[m
[32m+[m[32m    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–ª–µ–∞—Ä–≥. callable, —á—Ç–æ–±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ ThreadPoolExecutor(max_workers=?)[m
[32m+[m[32m    def _factory(*args, **kwargs):[m
[32m+[m[32m        return FakePool()[m
[32m+[m[32m    return _factory[m
[32m+[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_shortener_assert_not_called_factory():[m
[32m+[m[32m    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–¥—Ä—É–≥ –ø–æ–ª–µ–∑–µ—Ç –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É ‚Äî —Ç–µ—Å—Ç —É–ø–∞–¥—ë—Ç —Å—Ä–∞–∑—É.[m
[32m+[m[32m    def _factory():[m
[32m+[m[32m        class FakeTiny:[m
[32m+[m[32m            def short(self, url: str) -> str:[m
[32m+[m[32m                raise AssertionError("Provider MUST NOT be called for invalid input")[m
[32m+[m[32m        class FakeShortener:[m
[32m+[m[32m            tinyurl = FakeTiny()[m
[32m+[m[32m        return FakeShortener()[m
[32m+[m[32m    return _factory[m
[32m+[m
[32m+[m
[32m+[m[32m#  –ü—Ä–æ–≤–∞–π–¥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –µ–º—É –ø—Ä–∏—à—ë–ª –∏–º–µ–Ω–Ω–æ –æ–∂–∏–¥–∞–µ–º—ã–π (–æ—á–∏—â–µ–Ω–Ω—ã–π) URL[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_shortener_expect_url_factory():[m
[32m+[m[32m    def _factory(expected_url: str):[m
[32m+[m[32m        class FakeTiny:[m
[32m+[m[32m            def short(self, url: str) -> str:[m
[32m+[m[32m                assert url == expected_url, f"expected {expected_url}, got {url!r}"[m
[32m+[m[32m                return "https://tiny.one/abc123"[m
[32m+[m[32m        class FakeShortener:[m
[32m+[m[32m            tinyurl = FakeTiny()[m
[32m+[m[32m        return FakeShortener()[m
[32m+[m[32m    return _factory[m
[32m+[m
[32m+[m
[32m+[m[32m# –ü—É–ª, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏ –ó–ê–ü–û–ú–ò–ù–ê–ï–¢ timeout,[m
[32m+[m[32m#    —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_pool_capturing_timeout_factory():[m
[32m+[m[32m    captured = {"timeout": None, "calls": 0}[m
[32m+[m
[32m+[m[32m    class FakeFuture:[m
[32m+[m[32m        def __init__(self, value):[m
[32m+[m[32m            self._value = value[m
[32m+[m[32m        def result(self, timeout):[m
[32m+[m[32m            captured["timeout"] = timeout[m
[32m+[m[32m            captured["calls"] += 1[m
[32m+[m[32m            return self._value[m
[32m+[m
[32m+[m[32m    class FakePool:[m
[32m+[m[32m        def __enter__(self): return self[m
[32m+[m[32m        def __exit__(self, *a): pass[m
[32m+[m[32m        def submit(self, fn, *args, **kwargs):[m
[32m+[m[32m            # –≤—ã–ø–æ–ª–Ω—è–µ–º —Å—Ä–∞–∑—É –∏ –∫–ª–∞–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ future[m
[32m+[m[32m            return FakeFuture(fn(*args, **kwargs))[m
[32m+[m
[32m+[m[32m    def _factory():[m
[32m+[m[32m        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∞–º –ø—É–ª –∏ —Å–ª–æ–≤–∞—Ä—å —Å –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º[m
[32m+[m[32m        return FakePool(), captured[m
[32m+[m
[32m+[m[32m    return _factory[m
[32m+[m
[1mdiff --git a/tests/test_circuit.py b/tests/test_circuit.py[m
[1mnew file mode 100644[m
[1mindex 0000000..5afe81d[m
[1m--- /dev/null[m
[1m+++ b/tests/test_circuit.py[m
[36m@@ -0,0 +1,197 @@[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom lite_upgrade import AppState[m
[32m+[m
[32m+[m[32m# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï ---[m
[32m+[m
[32m+[m[32mclass FakeLogger:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self.messages = [][m
[32m+[m[32m    def debug(self, *a, **k): self.messages.append(("DEBUG", a, k))[m
[32m+[m[32m    def info(self, *a, **k): self.messages.append(("INFO", a, k))[m
[32m+[m[32m    def warning(self, *a, **k): self.messages.append(("WARN", a, k))[m
[32m+[m[32m    def error(self, *a, **k): self.messages.append(("ERROR", a, k))[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef logger():[m
[32m+[m[32m    return FakeLogger()[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef fake_time(monkeypatch):[m
[32m+[m[32m    # –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º time.time()[m
[32m+[m[32m    t = {"now": 1_000_000.0}[m
[32m+[m[32m    def _time(): return t["now"][m
[32m+[m[32m    def _sleep(dt): t["now"] += dt[m
[32m+[m[32m    import time as _builtin_time[m
[32m+[m[32m    monkeypatch.setattr("time.time", _time)[m
[32m+[m[32m    monkeypatch.setattr("time.sleep", _sleep)  # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è[m
[32m+[m[32m    return t[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef app():[m
[32m+[m[32m    # –ß–∏—Å—Ç—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–µ–∑ ¬´–≥—Ä—è–∑–Ω–æ–≥–æ¬ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏[m
[32m+[m[32m    return AppState()[m
[32m+[m
[32m+[m[32m# --- RATE LIMIT ---[m
[32m+[m
[32m+[m[32mdef test_rate_limit_allow_under_limit(app, logger):[m
[32m+[m[32m    # –ü–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã–∑–æ–≤–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å True (—Ç–æ—á–Ω–æ–µ —á–∏—Å–ª–æ –Ω–µ –≤–∞–∂–Ω–æ)[m
[32m+[m[32m    # –ü—Ä–æ–≤–µ—Ä–∏–º —Ö–æ—Ç—è –±—ã 3, —á—Ç–æ–±—ã –ø–æ–π–º–∞—Ç—å —Ä–∞–Ω–Ω–∏–µ –æ—à–∏–±–∫–∏.[m
[32m+[m[32m    assert app.rate_limit_allow(logger) is True[m
[32m+[m[32m    assert app.rate_limit_allow(logger) is True[m
[32m+[m[32m    assert app.rate_limit_allow(logger) is True[m
[32m+[m
[32m+[m[32mdef test_rate_limit_blocks_and_recovers(app, logger, fake_time):[m
[32m+[m[32m    # –î–æ–∂–∏–º–∞–µ–º –¥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏, –Ω–µ –∑–Ω–∞—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞)[m
[32m+[m[32m    blocked_at = None[m
[32m+[m[32m    for i in range(1, 200):[m
[32m+[m[32m        if app.rate_limit_allow(logger) is False:[m
[32m+[m[32m            blocked_at = i[m
[32m+[m[32m            break[m
[32m+[m[32m    assert blocked_at is not None, "–Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∑–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É rate-limit –¥–æ 200 –≤—ã–∑–æ–≤–æ–≤"[m
[32m+[m
[32m+[m[32m    # –°—Ä–∞–∑—É –ø–æ—Å–ª–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ‚Äî –≤—Å—ë –µ—â—ë False[m
[32m+[m[32m    assert app.rate_limit_allow(logger) is False[m
[32m+[m
[32m+[m[32m    # –°–¥–≤–∏–≥–∞–µ–º –æ–∫–Ω–æ –Ω–∞ ~60 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–Ω–æ–≤–∞ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç[m
[32m+[m[32m    fake_time["now"] += 61[m
[32m+[m[32m    assert app.rate_limit_allow(logger) is True[m
[32m+[m
[32m+[m[32m# --- CIRCUIT BREAKER ---[m
[32m+[m
[32m+[m[32mdef test_circuit_opens_after_enough_failures(app):[m
[32m+[m[32m    # –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º failures, –ø–æ–∫–∞ –Ω–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ü–µ–ø—å[m
[32m+[m[32m    opened_on = None[m
[32m+[m[32m    for i in range(1, 50):[m
[32m+[m[32m        app.record_failure()[m
[32m+[m[32m        if app.circuit_blocked():[m
[32m+[m[32m            opened_on = i[m
[32m+[m[32m            break[m
[32m+[m[32m    assert opened_on is not None, "—Ü–µ–ø—å –Ω–µ –æ—Ç–∫—Ä—ã–ª–∞—Å—å –ø–æ—Å–ª–µ —Å–µ—Ä–∏–∏ –æ—à–∏–±–æ–∫"[m
[32m+[m[32m    assert app.cooldown_left() > 0[m
[32m+[m
[32m+[m[32mdef test_circuit_half_open_after_cooldown(app, fake_time):[m
[32m+[m[32m    # –û—Ç–∫—Ä—ã–ª–∏ —Ü–µ–ø—å[m
[32m+[m[32m    for _ in range(10):[m
[32m+[m[32m        app.record_failure()[m
[32m+[m[32m        if app.circuit_blocked():[m
[32m+[m[32m            break[m
[32m+[m[32m    assert app.circuit_blocked() is True[m
[32m+[m
[32m+[m[32m    # –ñ–¥—ë–º –∏—Å—Ç–µ—á–µ–Ω–∏—è –∫—É–ª–¥–∞—É–Ω–∞ (—Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω–Ω–æ ‚Äî –±–µ—Ä—ë–º –∏–∑ –º–µ—Ç–æ–¥–∞)[m
[32m+[m[32m    wait = app.cooldown_left()[m
[32m+[m[32m    # –∏–Ω–æ–≥–¥–∞ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç int, –∏–Ω–æ–≥–¥–∞ float ‚Äî –Ω–µ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ[m
[32m+[m[32m    if wait and wait > 0:[m
[32m+[m[32m        fake_time["now"] += wait + 0.001[m
[32m+[m
[32m+[m[32m    # –ü–æ—Å–ª–µ –∫—É–ª–¥–∞—É–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–Ω—è—Ç—å—Å—è (half-open/allow)[m
[32m+[m[32m    assert app.circuit_blocked() is False[m
[32m+[m
[32m+[m[32mdef test_circuit_closes_on_success_after_cooldown(app, fake_time):[m
[32m+[m[32m    # –û—Ç–∫—Ä—ã–ª–∏[m
[32m+[m[32m    for _ in range(10):[m
[32m+[m[32m        app.record_failure()[m
[32m+[m[32m        if app.circuit_blocked():[m
[32m+[m[32m            break[m
[32m+[m[32m    assert app.circuit_blocked() is True[m
[32m+[m
[32m+[m[32m    # –î–æ–∂–¥–∞–ª–∏—Å—å –∫–æ–Ω—Ü–∞ –∫—É–ª–¥–∞—É–Ω–∞[m
[32m+[m[32m    wait = app.cooldown_left()[m
[32m+[m[32m    fake_time["now"] += (wait or 0) + 0.001[m
[32m+[m
[32m+[m[32m    # –û–¥–∏–Ω —É—Å–ø–µ—Ö –¥–æ–ª–∂–µ–Ω ¬´–∑–∞–∫—Ä—ã—Ç—å¬ª —Ü–µ–ø—å (—Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ)[m
[32m+[m[32m    app.record_success()[m
[32m+[m[32m    assert app.circuit_blocked() is False[m
[32m+[m
[32m+[m[32mdef test_sparse_failures_do_not_open_circuit(app):[m
[32m+[m[32m    # –†–∞–∑—Ä–µ–∂–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –æ—Ç–∫—Ä—ã—Ç—å —Ü–µ–ø—å[m
[32m+[m[32m    app.record_failure()[m
[32m+[m[32m    app.record_success()[m
[32m+[m[32m    app.record_failure()[m
[32m+[m[32m    assert app.circuit_blocked() is False[m
[32m+[m
[32m+[m
[32m+[m[32mimport time[m
[32m+[m
[32m+[m[32mfrom lite_upgrade import ([m
[32m+[m[32m    rate_limit_allow, circuit_blocked, cooldown_left,[m
[32m+[m[32m    record_failure, record_success,[m
[32m+[m[32m    _get_state, _reset_state,  # —Å–ª—É–∂–µ–±–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤[m
[32m+[m[32m    CLIENT_RPM_LIMIT, CB_FAIL_THRESHOLD, CB_COOLDOWN_SEC[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mclass FakeClock:[m
[32m+[m[32m    def __init__(self, start=1_000_000.0):[m
[32m+[m[32m        self.t = float(start)[m
[32m+[m[32m    def now(self):[m
[32m+[m[32m        return self.t[m
[32m+[m[32m    def tick(self, sec):[m
[32m+[m[32m        self.t += sec[m
[32m+[m
[32m+[m[32m@pytest.fixture(autouse=True)[m
[32m+[m[32mdef clean_state():[m
[32m+[m[32m    _reset_state()[m
[32m+[m[32m    yield[m
[32m+[m[32m    _reset_state()[m
[32m+[m
[32m+[m[32mdef test_rate_limit_basic_window():[m
[32m+[m[32m    clk = FakeClock()[m
[32m+[m[32m    # –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ –ª–∏–º–∏—Ç–∞ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ[m
[32m+[m[32m    for i in range(CLIENT_RPM_LIMIT):[m
[32m+[m[32m        assert rate_limit_allow(now_fn=clk.now)[m
[32m+[m[32m    # –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω[m
[32m+[m[32m    assert not rate_limit_allow(now_fn=clk.now)[m
[32m+[m[32m    # –ß–µ—Ä–µ–∑ 61 —Å–µ–∫ –æ–∫–Ω–æ —Å–¥–≤–∏–Ω–µ—Ç—Å—è ‚Äî —Å–Ω–æ–≤–∞ –º–æ–∂–Ω–æ[m
[32m+[m[32m    clk.tick(61)[m
[32m+[m[32m    assert rate_limit_allow(now_fn=clk.now)[m
[32m+[m
[32m+[m[32mdef test_circuit_opens_on_fail_threshold():[m
[32m+[m[32m    clk = FakeClock()[m
[32m+[m[32m    # –î–æ –ø–æ—Ä–æ–≥–∞ ‚Äî –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º[m
[32m+[m[32m    for _ in range(CB_FAIL_THRESHOLD - 1):[m
[32m+[m[32m        record_failure(now_fn=clk.now)[m
[32m+[m[32m        assert not circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    # –ù–∞ –ø–æ—Ä–æ–≥–µ ‚Äî –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è[m
[32m+[m[32m    record_failure(now_fn=clk.now)[m
[32m+[m[32m    assert circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    assert cooldown_left(now_fn=clk.now) == CB_COOLDOWN_SEC[m
[32m+[m
[32m+[m[32mdef test_circuit_counts_down_and_closes():[m
[32m+[m[32m    clk = FakeClock()[m
[32m+[m[32m    for _ in range(CB_FAIL_THRESHOLD):[m
[32m+[m[32m        record_failure(now_fn=clk.now)[m
[32m+[m[32m    assert circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    # –ò–¥—ë—Ç –æ—Ç—Å—á—ë—Ç[m
[32m+[m[32m    clk.tick(CB_COOLDOWN_SEC - 1)[m
[32m+[m[32m    assert circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    assert cooldown_left(now_fn=clk.now) == 1[m
[32m+[m[32m    # –ü—Ä–æ—à–ª–∏ –≤—Å–µ —Å–µ–∫—É–Ω–¥—ã ‚Äî –∑–∞–∫—Ä—ã—Ç–æ[m
[32m+[m[32m    clk.tick(1)[m
[32m+[m[32m    assert not circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    assert cooldown_left(now_fn=clk.now) == 0[m
[32m+[m
[32m+[m[32mdef test_record_success_resets_fail_counter():[m
[32m+[m[32m    clk = FakeClock()[m
[32m+[m[32m    for _ in range(CB_FAIL_THRESHOLD - 1):[m
[32m+[m[32m        record_failure(now_fn=clk.now)[m
[32m+[m[32m    record_success()[m
[32m+[m[32m    # –°–Ω–æ–≤–∞ –Ω–∞–±–∏—Ä–∞–µ–º ‚Äî –ø–æ—Ä–æ–≥ –¥–æ–ª–∂–µ–Ω —Å—á–∏—Ç–∞—Ç—å—Å—è –æ—Ç –Ω—É–ª—è[m
[32m+[m[32m    for _ in range(CB_FAIL_THRESHOLD - 1):[m
[32m+[m[32m        record_failure(now_fn=clk.now)[m
[32m+[m[32m        assert not circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    record_failure(now_fn=clk.now)[m
[32m+[m[32m    assert circuit_blocked(now_fn=clk.now)[m
[32m+[m
[32m+[m[32mdef test_mixed_rate_limit_and_circuit_independent():[m
[32m+[m[32m    clk = FakeClock()[m
[32m+[m[32m    # –ó–∞–±—å—ë–º rate-limit[m
[32m+[m[32m    for _ in range(CLIENT_RPM_LIMIT):[m
[32m+[m[32m        assert rate_limit_allow(now_fn=clk.now)[m
[32m+[m[32m    assert not rate_limit_allow(now_fn=clk.now)[m
[32m+[m[32m    # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –æ—Ç–∫—Ä–æ–µ–º ¬´–ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å¬ª[m
[32m+[m[32m    for _ in range(CB_FAIL_THRESHOLD):[m
[32m+[m[32m        record_failure(now_fn=clk.now)[m
[32m+[m[32m    assert circuit_blocked(now_fn=clk.now)[m
[32m+[m[32m    # –ü—Ä–æ–º–æ—Ç–∞–µ–º > –º–∏–Ω—É—Ç—É –∏ > cooldown ‚Äî –æ–±–∞ –¥–æ–ª–∂–Ω—ã ¬´–æ—Ç–ø—É—Å—Ç–∏—Ç—å¬ª[m
[32m+[m[32m    clk.tick(max(61, CB_COOLDOWN_SEC + 1))[m
[32m+[m[32m    assert rate_limit_allow(now_fn=clk.now)[m
[32m+[m[32m    assert not circuit_blocked(now_fn=clk.now)[m
[1mdiff --git a/tests/test_fingerprint.py b/tests/test_fingerprint.py[m
[1mnew file mode 100644[m
[1mindex 0000000..ff62a00[m
[1m--- /dev/null[m
[1m+++ b/tests/test_fingerprint.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mfrom lite_upgrade import _url_fingerprint[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32mdef test_url_fingerprint_basic():[m
[32m+[m[32m    u = "https://example.com/a?b=1"[m
[32m+[m[32m    out = _url_fingerprint(u)[m
[32m+[m[32m    # —Ç–µ–ø–µ—Ä—å –æ—Ç–ø–µ—á–∞—Ç–æ–∫ ‚Äî hex-—Å—Ç—Ä–æ–∫–∞[m
[32m+[m[32m    assert isinstance(out, str)[m
[32m+[m[32m    assert all(ch in "0123456789abcdef" for ch in out.lower())[m
[32m+[m[32m    assert len(out) >= 16  # SHA1 = 40 —Å–∏–º–≤–æ–ª–æ–≤[m
[32m+[m
[32m+[m[32mdef test_url_fingerprint_differs_for_different_urls():[m
[32m+[m[32m    u1 = "https://example.com/a"[m
[32m+[m[32m    u2 = "https://example.com/b"[m
[32m+[m[32m    assert _url_fingerprint(u1) != _url_fingerprint(u2)[m
[32m+[m
[32m+[m[32mdef test_url_fingerprint_invalid_input_raises():[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        _url_fingerprint("htp://  ")[m
[32m+[m
[32m+[m[32mdef test_url_fingerprint_stable_same_input():[m
[32m+[m[32m    u = "https://example.com/path?q=1#frag"[m
[32m+[m[32m    assert _url_fingerprint(u) == _url_fingerprint(u)[m
[1mdiff --git a/tests/test_handlers_unit.py b/tests/test_handlers_unit.py[m
[1mnew file mode 100644[m
[1mindex 0000000..d786580[m
[1m--- /dev/null[m
[1m+++ b/tests/test_handlers_unit.py[m
[36m@@ -0,0 +1,288 @@[m
[32m+[m[32mimport types[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32mimport urlcutter.handlers as H[m
[32m+[m[32mfrom urlcutter.handlers import Handlers[m
[32m+[m
[32m+[m
[32m+[m[32mclass FakeState:[m
[32m+[m[32m    def __init__(self, blocked=False, allow=True):[m
[32m+[m[32m        self._blocked = blocked[m
[32m+[m[32m        self._allow = allow[m
[32m+[m
[32m+[m[32m    def circuit_blocked(self):[m
[32m+[m[32m        return self._blocked[m
[32m+[m
[32m+[m[32m    def rate_limit_allow(self, _logger=None):[m
[32m+[m[32m        return self._allow[m
[32m+[m
[32m+[m[32m    def record_failure(self):[m
[32m+[m[32m        # –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def record_success(self):[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def cooldown_left(self):[m
[32m+[m[32m        return 0[m
[32m+[m
[32m+[m
[32m+[m[32mclass DummyPage:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self.clipboard = None[m
[32m+[m[32m        self.updated = 0[m
[32m+[m[32m        self.overlay = []  # –Ω—É–∂–Ω–æ –¥–ª—è Handlers.toast()[m
[32m+[m[32m        # Handlers –¥–µ—Ä–≥–∞–µ—Ç page.window.minimized –∏ page.window.close()[m
[32m+[m[32m        self.window = types.SimpleNamespace([m
[32m+[m[32m            minimized=False,[m
[32m+[m[32m            close=lambda: None,[m
[32m+[m[32m        )[m
[32m+[m
[32m+[m[32m    def add(self, root):[m
[32m+[m[32m        # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –≤ smoke, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def update(self):[m
[32m+[m[32m        self.updated += 1[m
[32m+[m
[32m+[m[32m    def set_clipboard(self, text):[m
[32m+[m[32m        self.clipboard = text[m
[32m+[m
[32m+[m[32m    # Handlers.on_paste –æ–∂–∏–¥–∞–µ—Ç API Flet: get_clipboard(callback)[m
[32m+[m[32m    def get_clipboard(self, callback):[m
[32m+[m[32m        callback(self.clipboard)[m
[32m+[m
[32m+[m
[32m+[m[32mclass DummyLogger:[m
[32m+[m[32m    def __getattr__(self, name):[m
[32m+[m[32m        def _noop(*_a, **_k): pass[m
[32m+[m
[32m+[m[32m        return _noop[m
[32m+[m
[32m+[m
[32m+[m[32mclass Btn:[m
[32m+[m[32m    def __init__(self): self.on_click = None; self.disabled = False[m
[32m+[m
[32m+[m[32m    def update(self): pass[m
[32m+[m
[32m+[m
[32m+[m[32mclass Field:[m
[32m+[m[32m    def __init__(self, val=""):[m
[32m+[m[32m        self.value = val[m
[32m+[m[32m        self.suffix = types.SimpleNamespace(on_click=None)[m
[32m+[m[32m        self.visible = True[m
[32m+[m[32m        self.error_text = None[m
[32m+[m
[32m+[m[32m    def update(self): pass[m
[32m+[m
[32m+[m[32m    def focus(self): pass[m
[32m+[m
[32m+[m[32m    def select_all(self): pass[m
[32m+[m
[32m+[m[32m    # –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—é—Ç clear/clean[m
[32m+[m[32m    def clear(self):[m
[32m+[m[32m        self.value = ""[m
[32m+[m
[32m+[m[32m    def clean(self):[m
[32m+[m[32m        self.value = ""[m
[32m+[m
[32m+[m
[32m+[m[32m# Mock –¥–ª—è pyperclip[m
[32m+[m[32mclass MockPyperclip:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self._clipboard = ""[m
[32m+[m
[32m+[m[32m    def paste(self):[m
[32m+[m[32m        return self._clipboard[m
[32m+[m
[32m+[m[32m    def copy(self, text):[m
[32m+[m[32m        self._clipboard = text[m
[32m+[m
[32m+[m
[32m+[m[32mdef make_handlers(monkeypatch, *, net_ok=True, short_value="https://tinyurl.com/x", mock_validation=False):[m
[32m+[m[32m    # –ø–æ–¥–º–µ–Ω–∏–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è handlers[m
[32m+[m[32m    monkeypatch.setattr(H, "internet_ok", lambda _logger: net_ok, raising=False)[m
[32m+[m[32m    monkeypatch.setattr(H, "shorten_via_tinyurl", lambda url, timeout=None: short_value, raising=False)[m
[32m+[m
[32m+[m[32m    # –°–æ–∑–¥–∞–µ–º mock –¥–ª—è pyperclip[m
[32m+[m[32m    mock_pyperclip = MockPyperclip()[m
[32m+[m[32m    monkeypatch.setattr(H, "pyperclip", mock_pyperclip, raising=False)[m
[32m+[m
[32m+[m[32m    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –ø–æ–¥–º–µ–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤[m
[32m+[m[32m    if mock_validation:[m
[32m+[m[32m        # –ì–ª–∞–≤–Ω–æ–µ - –ø–æ–¥–º–µ–Ω–∏—Ç—å normalize_url, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è[m
[32m+[m[32m        def mock_normalize_url(url):[m
[32m+[m[32m            # –ï—Å–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å[m
[32m+[m[32m            # validators.url —Å–∞–º —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ[m
[32m+[m[32m            return url.strip() if url else url[m
[32m+[m
[32m+[m[32m        monkeypatch.setattr(H, "normalize_url", mock_normalize_url, raising=False)[m
[32m+[m
[32m+[m[32m        # –ò –ø–æ–¥–º–µ–Ω—è–µ–º validators.url —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ URL[m
[32m+[m[32m        def mock_validators_url(url):[m
[32m+[m[32m            if not url or not url.strip():[m
[32m+[m[32m                return False[m
[32m+[m[32m            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–ª–æ—Ö–∏–µ URL - –Ω–µ–≤–∞–ª–∏–¥–Ω—ã[m
[32m+[m[32m            bad_urls = ["not a url", "ftp://host", "http:/broken", "https://"][m
[32m+[m[32m            if url in bad_urls:[m
[32m+[m[32m                return False[m
[32m+[m[32m            return True  # –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—á–∏—Ç–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–º–∏[m
[32m+[m
[32m+[m[32m        monkeypatch.setattr("validators.url", mock_validators_url, raising=False)[m
[32m+[m
[32m+[m[32m    page = DummyPage()[m
[32m+[m[32m    logger = DummyLogger()[m
[32m+[m[32m    state = FakeState(blocked=False, allow=True)[m
[32m+[m[32m    url_inp = Field("https://example.com")[m
[32m+[m[32m    short_out = Field("")[m
[32m+[m[32m    shorten_btn = Btn()[m
[32m+[m[32m    h = Handlers(page, logger, state, url_inp, short_out, shorten_btn)  # type: ignore[arg-type][m
[32m+[m[32m    return h, page, url_inp, short_out, shorten_btn, mock_pyperclip[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_success(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, shorten_btn, _ = make_handlers(monkeypatch, net_ok=True,[m
[32m+[m[32m                                                                short_value="https://tinyurl.com/ok")[m
[32m+[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m
[32m+[m[32m    assert short_out.value == "https://tinyurl.com/ok"[m
[32m+[m[32m    assert page.updated >= 1[m
[32m+[m[32m    assert shorten_btn.disabled is False[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_no_internet(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, shorten_btn, _ = make_handlers(monkeypatch, net_ok=False)[m
[32m+[m
[32m+[m[32m    # –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ ¬´–Ω–µ—Ç¬ª, —à–æ—Ä—Ç–µ–Ω–µ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å—Å—è, –∞ –ø–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å—Å—è[m
[32m+[m[32m    before = short_out.value[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    assert short_out.value == before[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_copy(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, _, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    short_out.value = "https://tinyurl.com/copied"[m
[32m+[m
[32m+[m[32m    h.on_copy(None)[m
[32m+[m
[32m+[m[32m    assert page.clipboard == "https://tinyurl.com/copied"[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_clear(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, btn, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    url_inp.value = "https://example.com"[m
[32m+[m[32m    short_out.value = "https://tinyurl.com/zzz"[m
[32m+[m
[32m+[m[32m    # –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ on_clear —Ç–æ–ª—å–∫–æ –æ—á–∏—â–∞–µ—Ç url_input_field, –Ω–µ short_url_field[m
[32m+[m[32m    h.on_clear(None)[m
[32m+[m[32m    assert url_inp.value == ""[m
[32m+[m[32m    # short_out –ù–ï –æ—á–∏—â–∞–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ on_clear[m
[32m+[m[32m    assert short_out.value == "https://tinyurl.com/zzz"[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_paste(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, btn, mock_pyperclip = make_handlers(monkeypatch)[m
[32m+[m
[32m+[m[32m    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ mock clipboard[m
[32m+[m[32m    mock_pyperclip._clipboard = "https://example.com/p"[m
[32m+[m
[32m+[m[32m    h.on_paste(None)[m
[32m+[m[32m    assert url_inp.value == "https://example.com/p"[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_window_buttons(monkeypatch):[m
[32m+[m[32m    h, page, *_ = make_handlers(monkeypatch)[m
[32m+[m[32m    page.window = types.SimpleNamespace(minimized=False, close=lambda: None)[m
[32m+[m[32m    h.on_minimize(None)[m
[32m+[m[32m    assert page.window.minimized is True[m
[32m+[m[32m    h.on_close(None)  # –ø—Ä–æ—Å—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –∫–∏–¥–∞—Ç—å[m
[32m+[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("value,msg", [[m
[32m+[m[32m    ("", "Enter the link."),[m
[32m+[m[32m    ("   ", "Enter the link."),[m
[32m+[m[32m])[m
[32m+[m[32mdef test_on_shorten_empty(monkeypatch, value, msg):[m
[32m+[m[32m    h, page, url_inp, short_out, _, _ = make_handlers(monkeypatch, mock_validation=True)[m
[32m+[m[32m    url_inp.value = value[m
[32m+[m
[32m+[m[32m    # –ü–æ–¥–º–µ–Ω—è–µ–º toast, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è[m
[32m+[m[32m    messages = [][m
[32m+[m
[32m+[m[32m    def mock_toast(m, ms=1500):[m
[32m+[m[32m        messages.append(m)[m
[32m+[m
[32m+[m[32m    h.toast = mock_toast[m
[32m+[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    assert msg in messages[m
[32m+[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("bad", ["not a url", "ftp://host", "http:/broken", "https://"])[m
[32m+[m[32mdef test_on_shorten_invalid(monkeypatch, bad):[m
[32m+[m[32m    h, page, url_inp, short_out, _, _ = make_handlers(monkeypatch, mock_validation=True)[m
[32m+[m[32m    url_inp.value = bad[m
[32m+[m
[32m+[m[32m    messages = [][m
[32m+[m
[32m+[m[32m    def mock_toast(m, ms=1500):[m
[32m+[m[32m        messages.append(m)[m
[32m+[m
[32m+[m[32m    h.toast = mock_toast[m
[32m+[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ URL[m
[32m+[m[32m    assert any("Incorrect URL" in m for m in messages)[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_already_tiny(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, _, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    url_inp.value = "https://tinyurl.com/abcd"[m
[32m+[m
[32m+[m[32m    messages = [][m
[32m+[m
[32m+[m[32m    def mock_toast(m, ms=1500):[m
[32m+[m[32m        messages.append(m)[m
[32m+[m
[32m+[m[32m    h.toast = mock_toast[m
[32m+[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    assert any("already a short link" in m.lower() for m in messages)[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_circuit_blocked(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, btn, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    # –ø–æ–¥–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ[m
[32m+[m[32m    h.state._blocked = True[m
[32m+[m[32m    url_inp.value = "https://example.com"[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    # –ö–Ω–æ–ø–∫–∞ –Ω–µ ¬´–∑–∞–ª–∏–ø–ª–∞¬ª, –æ—à–∏–±–∫—É –Ω–µ –∫–∏–Ω—É–ª–æ[m
[32m+[m[32m    assert btn.disabled is False[m
[32m+[m[32m    # —à–æ—Ä—Ç—Å—Å—ã–ª–∫–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å[m
[32m+[m[32m    assert short_out.value == ""[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_rate_limited(monkeypatch):[m
[32m+[m[32m    h, page, url_inp, short_out, btn, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    h.state._allow = False[m
[32m+[m[32m    url_inp.value = "https://example.com/x"[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    assert short_out.value == ""[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_on_shorten_provider_error(monkeypatch):[m
[32m+[m[32m    # internet_ok True, –Ω–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä –ø–∞–¥–∞–µ—Ç[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.handlers.internet_ok", lambda _lg: True, raising=False)[m
[32m+[m
[32m+[m[32m    def boom(url, timeout=None): raise RuntimeError("provider down")[m
[32m+[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.handlers.shorten_via_tinyurl", boom, raising=False)[m
[32m+[m
[32m+[m[32m    h, page, url_inp, short_out, btn, _ = make_handlers(monkeypatch)[m
[32m+[m[32m    url_inp.value = "https://example.com/a"[m
[32m+[m[32m    # –ß—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª toast –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ[m
[32m+[m[32m    h.toast = lambda *_a, **_k: None[m
[32m+[m[32m    h.on_shorten(None)[m
[32m+[m[32m    # –ù–∏–∫–∞–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –∫–Ω–æ–ø–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å, –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã ¬´–º—É—Å–æ—Ä–æ–º¬ª[m
[32m+[m[32m    assert btn.disabled is False[m
\ No newline at end of file[m
[1mdiff --git a/tests/test_internet_ok.py b/tests/test_internet_ok.py[m
[1mnew file mode 100644[m
[1mindex 0000000..1ab3ca1[m
[1m--- /dev/null[m
[1m+++ b/tests/test_internet_ok.py[m
[36m@@ -0,0 +1,45 @@[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom lite_upgrade import internet_ok[m
[32m+[m
[32m+[m[32m# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä, —á—Ç–æ–±—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—ã[m
[32m+[m[32mclass FakeLogger:[m
[32m+[m[32m    def debug(self, *a, **k): pass[m
[32m+[m[32m    def info(self, *a, **k): pass[m
[32m+[m[32m    def warning(self, *a, **k): pass[m
[32m+[m[32m    def error(self, *a, **k): pass[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef logger():[m
[32m+[m[32m    return FakeLogger()[m
[32m+[m
[32m+[m[32mdef test_internet_ok_false_when_circuit_blocked(monkeypatch, logger):[m
[32m+[m[32m    class FakeAppState:[m
[32m+[m[32m        def __init__(self): pass[m
[32m+[m[32m        def circuit_blocked(self) -> bool: return True[m
[32m+[m[32m        def rate_limit_allow(self, logger) -> bool:  # –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å—Å—è, –Ω–æ –ø—É—Å—Ç—å –±—É–¥–µ—Ç[m
[32m+[m[32m            pytest.fail("rate_limit_allow must not be called when circuit is blocked")[m
[32m+[m
[32m+[m[32m    # –ø–æ–¥–º–µ–Ω—è–µ–º –ö–õ–ê–°–° AppState –≤ –º–æ–¥—É–ª–µ lite_upgrade[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.AppState", FakeAppState)[m
[32m+[m
[32m+[m[32m    assert internet_ok(logger) is False[m
[32m+[m
[32m+[m[32mdef test_internet_ok_false_when_rate_limit_disallows(monkeypatch, logger):[m
[32m+[m[32m    class FakeAppState:[m
[32m+[m[32m        def __init__(self): pass[m
[32m+[m[32m        def circuit_blocked(self) -> bool: return False[m
[32m+[m[32m        def rate_limit_allow(self, logger) -> bool: return False[m
[32m+[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.AppState", FakeAppState)[m
[32m+[m
[32m+[m[32m    assert internet_ok(logger) is False[m
[32m+[m
[32m+[m[32mdef test_internet_ok_true_when_all_good(monkeypatch, logger):[m
[32m+[m[32m    class FakeAppState:[m
[32m+[m[32m        def __init__(self): pass[m
[32m+[m[32m        def circuit_blocked(self) -> bool: return False[m
[32m+[m[32m        def rate_limit_allow(self, logger) -> bool: return True[m
[32m+[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.AppState", FakeAppState)[m
[32m+[m
[32m+[m[32m    assert internet_ok(logger) is True[m
[1mdiff --git a/tests/test_internet_ok_logging.py b/tests/test_internet_ok_logging.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8940549[m
[1m--- /dev/null[m
[1m+++ b/tests/test_internet_ok_logging.py[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32mimport logging[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom lite_upgrade import internet_ok[m
[32m+[m
[32m+[m[32mclass FakeLogger:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self._logger = logging.getLogger("test.internet_ok")[m
[32m+[m[32m        self._logger.setLevel(logging.DEBUG)[m
[32m+[m[32m        self.records = [][m
[32m+[m
[32m+[m[32m        class _H(logging.Handler):[m
[32m+[m[32m            def __init__(self, outer): super().__init__(); self.outer = outer[m
[32m+[m[32m            def emit(self, rec): self.outer.records.append(rec)[m
[32m+[m[32m        self._logger.addHandler(_H(self))[m
[32m+[m
[32m+[m[32m    def debug(self, *a, **k): self._logger.debug(*a, **k)[m
[32m+[m[32m    def info(self, *a, **k): self._logger.info(*a, **k)[m
[32m+[m[32m    def warning(self, *a, **k): self._logger.warning(*a, **k)[m
[32m+[m[32m    def error(self, *a, **k): self._logger.error(*a, **k)[m
[32m+[m
[32m+[m[32m@pytest.fixture[m
[32m+[m[32mdef logger(): return FakeLogger()[m
[32m+[m
[32m+[m[32mdef test_internet_ok_logs_when_circuit_open(monkeypatch, logger):[m
[32m+[m[32m    class FakeAppState:[m
[32m+[m[32m        def circuit_blocked(self): return True[m
[32m+[m[32m        def rate_limit_allow(self, _): pytest.fail("should not call rate_limit_allow")[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.AppState", FakeAppState)[m
[32m+[m
[32m+[m[32m    assert internet_ok(logger) is False[m
[32m+[m[32m    msgs = [r.getMessage() for r in logger.records][m
[32m+[m[32m    assert any("circuit" in m.lower() for m in msgs)[m
[32m+[m
[32m+[m[32mdef test_internet_ok_logs_when_rate_limited(monkeypatch, logger):[m
[32m+[m[32m    class FakeAppState:[m
[32m+[m[32m        def circuit_blocked(self): return False[m
[32m+[m[32m        def rate_limit_allow(self, _): return False[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.AppState", FakeAppState)[m
[32m+[m
[32m+[m[32m    assert internet_ok(logger) is False[m
[32m+[m[32m    msgs = [r.getMessage() for r in logger.records][m
[32m+[m[32m    assert any("rate" in m.lower() and "limit" in m.lower() for m in msgs)[m
[1mdiff --git a/tests/test_main_smoke.py b/tests/test_main_smoke.py[m
[1mnew file mode 100644[m
[1mindex 0000000..1d24bf4[m
[1m--- /dev/null[m
[1m+++ b/tests/test_main_smoke.py[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32mimport types[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32mimport lite_upgrade[m
[32m+[m
[32m+[m
[32m+[m[32mclass DummyPage:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self.added = None[m
[32m+[m[32m        self.updated = 0[m
[32m+[m[32m        self.clipboard = None[m
[32m+[m[32m        # –∏–º–∏—Ç–∏—Ä—É–µ–º —á–∞—Å—Ç—ã–µ –ø–æ–ª—è, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –±–∏–ª–¥–µ—Ä—ã –∫ –Ω–∏–º –ø–æ–ª–µ–∑—É—Ç[m
[32m+[m[32m        self.window = types.SimpleNamespace(minimized=False)[m
[32m+[m
[32m+[m[32m    def add(self, root):[m
[32m+[m[32m        self.added = root[m
[32m+[m
[32m+[m[32m    def update(self):[m
[32m+[m[32m        self.updated += 1[m
[32m+[m
[32m+[m[32m    def set_clipboard(self, text):[m
[32m+[m[32m        self.clipboard = text[m
[32m+[m
[32m+[m
[32m+[m[32m# –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—ã —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ on_click[m
[32m+[m[32mclass Btn:[m
[32m+[m[32m    def __init__(self): self.on_click = None[m
[32m+[m
[32m+[m[32mclass Field:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        # –≤ main() –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è on_click –∫ suffix[m
[32m+[m[32m        self.suffix = types.SimpleNamespace(on_click=None)[m
[32m+[m[32m        self.value = ""[m
[32m+[m[32m        self.visible = True[m
[32m+[m[32m        self.disabled = False[m
[32m+[m[32m        def _noop(): pass[m
[32m+[m[32m        self.update = _noop[m
[32m+[m
[32m+[m
[32m+[m[32m# –±–∏–ª–¥–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä–Ω—É—Ç —Ç–æ, —á—Ç–æ –∂–¥—ë—Ç main()[m
[32m+[m[32mdef fake_configure(page): pass[m
[32m+[m[32mdef fake_build_header(): return object()[m
[32m+[m[32mdef fake_build_title_bar(): return "row", Btn(), Btn(), Btn()[m
[32m+[m[32mdef fake_build_inputs(): return Field(), Field()[m
[32m+[m[32mdef fake_build_buttons(): return "row", Btn(), Btn(), Btn()[m
[32m+[m[32mdef fake_build_footer(): return object()[m
[32m+[m[32mdef fake_compose_page(*_args): return "ROOT"[m
[32m+[m
[32m+[m
[32m+[m[32m# –•—ç–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã[m
[32m+[m[32mclass FakeHandlers:[m
[32m+[m[32m    def __init__(self, page, logger, state, url_inp, short_out, shorten_btn):[m
[32m+[m[32m        self.bound = (page, logger, state, url_inp, short_out, shorten_btn)[m
[32m+[m
[32m+[m[32m    # –º–µ—Ç–æ–¥—ã, –∫ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–≤—è–∂—É—Ç—Å—è on_click[m
[32m+[m[32m    def on_paste(self, *_): pass[m
[32m+[m[32m    def on_shorten(self, *_): pass[m
[32m+[m[32m    def on_clear(self, *_): pass[m
[32m+[m[32m    def on_copy(self, *_): pass[m
[32m+[m[32m    def on_open_info(self, *_): pass[m
[32m+[m[32m    def on_minimize(self, *_): pass[m
[32m+[m[32m    def on_close(self, *_): pass[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_main_smoke(monkeypatch):[m
[32m+[m[32m    # –ø–æ–¥–º–µ–Ω—è–µ–º —Ç–æ, —á—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –í–ù–£–¢–†–ò main()[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.configure_window_and_theme", fake_configure, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.build_header", fake_build_header, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.build_title_bar", fake_build_title_bar, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.build_inputs", fake_build_inputs, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.build_buttons", fake_build_buttons, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.build_footer", fake_build_footer, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.ui_builders.compose_page", fake_compose_page, raising=False)[m
[32m+[m[32m    monkeypatch.setattr("urlcutter.handlers.Handlers", FakeHandlers, raising=False)[m
[32m+[m
[32m+[m[32m    page = DummyPage()[m
[32m+[m[32m    lite_upgrade.main(page)[m
[32m+[m
[32m+[m[32m    # —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–∏–ª–∞ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç –∏ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Ö–æ—Ç—è –±—ã —Ä–∞–∑[m
[32m+[m[32m    assert page.added == "ROOT"[m
[32m+[m[32m    assert page.updated >= 1[m
[1mdiff --git a/tests/test_normalize_url.py b/tests/test_normalize_url.py[m
[1mnew file mode 100644[m
[1mindex 0000000..095e11a[m
[1m--- /dev/null[m
[1m+++ b/tests/test_normalize_url.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mfrom lite_upgrade import normalize_url[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_normalize_adds_scheme_and_trims_spaces():[m
[32m+[m[32m    out = normalize_url("  example.com  ")[m
[32m+[m[32m    assert out == "http://example.com"[m
[32m+[m
[32m+[m[32mdef test_normalize_lowercases_scheme_and_host():[m
[32m+[m[32m    out = normalize_url("HTTPS://ExAmPle.COM/Path")[m
[32m+[m[32m    assert out == "https://example.com/Path"[m
[32m+[m
[32m+[m[32mdef test_normalize_rejects_internal_spaces():[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        normalize_url("https://exa mple.com")[m
[32m+[m
[32m+[m[32mdef test_normalize_rejects_empty():[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        normalize_url("")[m
[32m+[m
[32m+[m[32mdef test_normalize_unicode_domain_stays_as_is():[m
[32m+[m[32m    out = normalize_url("https://–ø—Ä–∏–º–µ—Ä.—Ä—Ñ/—Å—Ç—Ä–∞–Ω–∏—Ü–∞")[m
[32m+[m[32m    assert out == "https://–ø—Ä–∏–º–µ—Ä.—Ä—Ñ/—Å—Ç—Ä–∞–Ω–∏—Ü–∞"[m
\ No newline at end of file[m
[1mdiff --git a/tests/test_normalize_url_extra.py b/tests/test_normalize_url_extra.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4f4bd68[m
[1m--- /dev/null[m
[1m+++ b/tests/test_normalize_url_extra.py[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom lite_upgrade import normalize_url[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("src, expect", [[m
[32m+[m[32m    # –¥–æ–±–∞–≤–ª—è–µ—Ç http –µ—Å–ª–∏ –Ω–µ—Ç —Å—Ö–µ–º—ã, –ø—Ä–∏–≤–æ–¥–∏—Ç —Ö–æ—Å—Ç –∫ lower, —É–±–∏—Ä–∞–µ—Ç fragment[m
[32m+[m[32m    ("Example.COM", "http://example.com"),[m
[32m+[m[32m    ("example.com/path#frag", "http://example.com/path"),[m
[32m+[m[32m    # —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç https, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –ø—É—Ç—å, —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç query (–µ—Å–ª–∏ —Ç–∞–∫ –∑–∞–¥—É–º–∞–Ω–æ)[m
[32m+[m[32m    ("https://EXAMPLE.com/a?b=2&a=1", "https://example.com/a?a=1&b=2"),[m
[32m+[m[32m    # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã —É–±–∏—Ä–∞–µ—Ç, –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç[m
[32m+[m[32m    ("http://example.com:80/a", "http://example.com/a"),[m
[32m+[m[32m    ("https://example.com:443", "https://example.com"),[m
[32m+[m[32m    ("https://example.com:8443/x", "https://example.com:8443/x"),[m
[32m+[m[32m    # –ø—É—Å—Ç–æ–π –ø—É—Ç—å ‚Üí '/'[m
[32m+[m[32m    ("https://example.com", "https://example.com"),[m
[32m+[m[32m])[m
[32m+[m[32mdef test_normalize_url_happy(src, expect):[m
[32m+[m[32m    assert normalize_url(src) == expect[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("bad", ["", "   ", "exa mple.com", "\t\texample.com"])[m
[32m+[m[32mdef test_normalize_url_spaces_or_empty(bad):[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        normalize_url(bad)[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("bad", ["ftp://example.com", "htp://example.com", "mailto:a@b"])[m
[32m+[m[32mdef test_normalize_url_bad_scheme(bad):[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        normalize_url(bad)[m
[1mdiff --git a/tests/test_setup_logging.py b/tests/test_setup_logging.py[m
[1mnew file mode 100644[m
[1mindex 0000000..fc0f0d6[m
[1m--- /dev/null[m
[1m+++ b/tests/test_setup_logging.py[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mimport logging[m
[32m+[m[32mfrom lite_upgrade import setup_logging[m
[32m+[m
[32m+[m[32mdef _levels(logger):[m
[32m+[m[32m    lvl = logger.level[m
[32m+[m[32m    # —Å–æ–±–∏—Ä–∞–µ–º —É—Ä–æ–≤–Ω–∏ —É —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤[m
[32m+[m[32m    handlers = [h.level for h in logger.handlers][m
[32m+[m[32m    return lvl, handlers[m
[32m+[m
[32m+[m[32mdef test_setup_logging_disabled_debug_off():[m
[32m+[m[32m    lg = setup_logging(enabled=False, debug=False)[m
[32m+[m[32m    # –∫–æ–≥–¥–∞ –≤—ã–∫–ª—é—á–µ–Ω–æ ‚Äî –º–æ–∂–Ω–æ –æ–∂–∏–¥–∞—Ç—å, —á—Ç–æ –ª–æ–≥–µ—Ä –Ω–∞ WARNING/ERROR[m
[32m+[m[32m    lvl, handlers = _levels(lg)[m
[32m+[m[32m    assert lvl in (logging.WARNING, logging.ERROR, logging.CRITICAL)[m
[32m+[m
[32m+[m[32mdef test_setup_logging_enabled_debug_off():[m
[32m+[m[32m    lg = setup_logging(enabled=True, debug=False)[m
[32m+[m[32m    lvl, handlers = _levels(lg)[m
[32m+[m[32m    assert lvl <= logging.INFO  # INFO –∏–ª–∏ –Ω–∏–∂–µ[m
[32m+[m[32m    assert len(lg.handlers) >= 1[m
[32m+[m
[32m+[m[32mdef test_setup_logging_enabled_debug_on():[m
[32m+[m[32m    lg = setup_logging(enabled=True, debug=True)[m
[32m+[m[32m    lvl, handlers = _levels(lg)[m
[32m+[m[32m    assert lvl <= logging.DEBUG  # DEBUG –∏–ª–∏ –Ω–∏–∂–µ[m
[32m+[m[32m    assert len(lg.handlers) >= 1[m
[1mdiff --git a/tests/test_shorten_success.py b/tests/test_shorten_success.py[m
[1mnew file mode 100644[m
[1mindex 0000000..fe20b66[m
[1m--- /dev/null[m
[1m+++ b/tests/test_shorten_success.py[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mimport lite_upgrade[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_shorten_success(monkeypatch):[m
[32m+[m[32m    # –ø–æ–¥–º–µ–Ω—è–µ–º pyshorteners.Shortener() –Ω–∞ —Ñ–µ–π–∫[m
[32m+[m[32m    class FakeTiny:[m
[32m+[m[32m        def short(self, u):  # –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–∏—Å–∞[m
[32m+[m[32m            return "https://tinyurl.com/abc123"[m
[32m+[m
[32m+[m[32m    class FakeShortener:[m
[32m+[m[32m        def __init__(self):[m
[32m+[m[32m            self.tinyurl = FakeTiny()[m
[32m+[m
[32m+[m[32m    monkeypatch.setattr(lite_upgrade.pyshorteners, "Shortener", lambda: FakeShortener())[m
[32m+[m
[32m+[m[32m    out = lite_upgrade.shorten_via_tinyurl("http://example.com", timeout=0.1)[m
[32m+[m[32m    assert out.startswith("https://tinyurl.com/")[m
[1mdiff --git a/tests/test_shorten_timeout.py b/tests/test_shorten_timeout.py[m
[1mnew file mode 100644[m
[1mindex 0000000..298d290[m
[1m--- /dev/null[m
[1m+++ b/tests/test_shorten_timeout.py[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32mimport lite_upgrade[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_shorten_timeout(monkeypatch):[m
[32m+[m[32m    # —ç–º—É–ª–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç —É ThreadPoolExecutor.result()[m
[32m+[m[32m    class FakeFuture:[m
[32m+[m[32m        def result(self, timeout):[m
[32m+[m[32m            raise lite_upgrade.FutTimeout()[m
[32m+[m
[32m+[m[32m    class FakeExecutor:[m
[32m+[m[32m        def __init__(self, max_workers):[m
[32m+[m[32m            pass[m
[32m+[m
[32m+[m[32m        def __enter__(self):[m
[32m+[m[32m            return self[m
[32m+[m
[32m+[m[32m        def __exit__(self, *a):[m
[32m+[m[32m            return False[m
[32m+[m
[32m+[m[32m        def submit(self, fn):  # fn –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º, —Å—Ä–∞–∑—É "—Ç–∞–π–º–∞—É—Ç"[m
[32m+[m[32m            return FakeFuture()[m
[32m+[m
[32m+[m[32m    monkeypatch.setattr(lite_upgrade, "ThreadPoolExecutor", FakeExecutor)[m
[32m+[m
[32m+[m[32m    with pytest.raises(lite_upgrade.FutTimeout):[m
[32m+[m[32m        lite_upgrade.shorten_via_tinyurl("http://example.com", timeout=0.01)[m
[1mdiff --git a/tests/test_shorten_tinyurl.py b/tests/test_shorten_tinyurl.py[m
[1mnew file mode 100644[m
[1mindex 0000000..57ef644[m
[1m--- /dev/null[m
[1m+++ b/tests/test_shorten_tinyurl.py[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom urllib.parse import urlparse[m
[32m+[m[32mfrom lite_upgrade import shorten_via_tinyurl[m
[32m+[m
[32m+[m[32mclass DummyResp:[m
[32m+[m[32m    def __init__(self, status_code=200, text=""):[m
[32m+[m[32m        self.status_code = status_code[m
[32m+[m[32m        self.text = text[m
[32m+[m
[32m+[m[32m# 1) –£—Å–ø–µ—Ö: –ø—Ä–æ–≤–∞–π–¥–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É[m
[32m+[m[32mdef test_tinyurl_success():[m
[32m+[m[32m    def fake_get(url, timeout=None):[m
[32m+[m[32m        # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –º—ã –≤–æ–æ–±—â–µ –∑–æ–≤—ë–º API TinyURL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º url=[m
[32m+[m[32m        assert "api" in url.lower() and "url=" in url[m
[32m+[m[32m        return DummyResp(200, "https://tinyurl.com/abcd1")[m
[32m+[m[32m    out = shorten_via_tinyurl("https://example.com/page", _get=fake_get)[m
[32m+[m[32m    assert out == "https://tinyurl.com/abcd1"[m
[32m+[m[32m    parsed = urlparse(out)[m
[32m+[m[32m    assert parsed.scheme in ("http", "https") and parsed.netloc[m
[32m+[m
[32m+[m[32m# 2) HTTP-–æ—à–∏–±–∫–∞[m
[32m+[m[32mdef test_tinyurl_http_error():[m
[32m+[m[32m    def fake_get(url, timeout=None):[m
[32m+[m[32m        return DummyResp(503, "Service Unavailable")[m
[32m+[m[32m    with pytest.raises(RuntimeError):[m
[32m+[m[32m        shorten_via_tinyurl("https://example.com", _get=fake_get)[m
[32m+[m
[32m+[m[32m# 3) –ë–∏—Ç—ã–π –æ—Ç–≤–µ—Ç (–Ω–µ URL)[m
[32m+[m[32mdef test_tinyurl_bad_payload():[m
[32m+[m[32m    def fake_get(url, timeout=None):[m
[32m+[m[32m        return DummyResp(200, "NOT_A_URL")[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        shorten_via_tinyurl("https://example.com", _get=fake_get)[m
[32m+[m
[32m+[m[32m# 4) –¢–∞–π–º–∞—É—Ç/–∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ[m
[32m+[m[32mdef test_tinyurl_timeout():[m
[32m+[m[32m    class Boom(Exception):[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def fake_get(url, timeout=None):[m
[32m+[m[32m        raise Boom("timeout")[m
[32m+[m[32m    with pytest.raises(RuntimeError):[m
[32m+[m[32m        shorten_via_tinyurl("https://example.com", _get=fake_get)[m
[32m+[m
[32m+[m[32m# 5) –ó–∞–æ–¥–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º, —á—Ç–æ –∫—Ä–∏–≤—ã–µ —Å—Ö–µ–º—ã –æ—Ç—Ñ—É—Ç–±–æ–ª–∏–≤–∞—é—Ç—Å—è (–µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è normalize_url)[m
[32m+[m[32mdef test_tinyurl_rejects_bad_scheme():[m
[32m+[m[32m    def fake_get(url, timeout=None):[m
[32m+[m[32m        # –î–æ —Å—é–¥–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –¥–æ–π—Ç–∏[m
[32m+[m[32m        raise AssertionError("should fail earlier on normalize_url")[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        shorten_via_tinyurl("htp://bad", _get=fake_get)[m
[1mdiff --git a/tests/test_shortener.py b/tests/test_shortener.py[m
[1mnew file mode 100644[m
[1mindex 0000000..0607389[m
[1m--- /dev/null[m
[1m+++ b/tests/test_shortener.py[m
[36m@@ -0,0 +1,122 @@[m
[32m+[m[32mimport pytest[m
[32m+[m[32mfrom concurrent.futures import TimeoutError[m
[32m+[m[32mfrom lite_upgrade import shorten_via_tinyurl[m
[32m+[m
[32m+[m[32mdef test_shorten_via_tinyurl_happy_path(monkeypatch, fake_shortener_ok_factory):[m
[32m+[m[32m    # –±—ã–ª–æ: monkeypatch.setattr("pyshorteners.Shortener", lambda: FakeShortener)[m
[32m+[m[32m    # —Å—Ç–∞–ª–æ: –ø–æ–¥—Å–æ–≤—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ–∞–±—Ä–∏–∫—É (–Ω—É–ª–µ–∞—Ä–≥. callable)[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m
[32m+[m[32m    result = shorten_via_tinyurl("https://example.com", timeout=1.0)[m
[32m+[m[32m    assert result == "https://tiny.one/abc123"[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_shorten_via_tinyurl_timeout(monkeypatch, fake_pool_timeout_factory, fake_shortener_ok_factory):[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.ThreadPoolExecutor", fake_pool_timeout_factory)[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m
[32m+[m[32m    with pytest.raises(TimeoutError):[m
[32m+[m[32m        shorten_via_tinyurl("https://example.com", timeout=0.01)[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_shorten_via_tinyurl_provider_error(monkeypatch, fake_shortener_boom_factory):[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_boom_factory)[m
[32m+[m
[32m+[m[32m    with pytest.raises(RuntimeError) as excinfo:[m
[32m+[m[32m        shorten_via_tinyurl("https://example.com", timeout=1.0)[m
[32m+[m[32m    assert "boom" in str(excinfo.value)[m
[32m+[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("bad_input", [[m
[32m+[m[32m    "",                # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞[m
[32m+[m[32m    "   ",             # —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã[m
[32m+[m[32m    None,              # None[m
[32m+[m[32m    "not a url",       # –º—É—Å–æ—Ä[m
[32m+[m[32m    "ftp://example",   # –Ω–µ-HTTP(S) —Å—Ö–µ–º–∞[m
[32m+[m[32m])[m
[32m+[m[32mdef test_shorten_via_tinyurl_invalid_input_raises([m
[32m+[m[32m    monkeypatch,[m
[32m+[m[32m    fake_shortener_assert_not_called_factory,[m
[32m+[m[32m    bad_input[m
[32m+[m[32m):[m
[32m+[m[32m    # –ü–æ–¥—Å–æ–≤—ã–≤–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —É–ø–∞–¥—ë—Ç, –µ—Å–ª–∏ –µ–≥–æ –≤–¥—Ä—É–≥ –≤—ã–∑–æ–≤—É—Ç[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_assert_not_called_factory)[m
[32m+[m
[32m+[m[32m    with pytest.raises(ValueError):[m
[32m+[m[32m        shorten_via_tinyurl(bad_input, timeout=0.1)[m
[32m+[m
[32m+[m
[32m+[m[32m# strip() –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç[m
[32m+[m[32mdef test_shorten_via_tinyurl_strips_spaces(monkeypatch, fake_shortener_ok_factory):[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m[32m    res = shorten_via_tinyurl("   https://example.com/page  ", timeout=0.5)[m
[32m+[m[32m    assert res == "https://tiny.one/abc123"[m
[32m+[m
[32m+[m
[32m+[m[32m# –í –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É—Ö–æ–¥–∏—Ç —É–∂–µ –æ—á–∏—â–µ–Ω–Ω—ã–π URL (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)[m
[32m+[m[32mdef test_shorten_via_tinyurl_passes_clean_url_to_provider([m
[32m+[m[32m    monkeypatch, fake_shortener_expect_url_factory[m
[32m+[m[32m):[m
[32m+[m[32m    expected = "https://example.com/x"[m
[32m+[m[32m    # –ø–æ–¥—Å–æ–≤—ã–≤–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤—Ö–æ–¥–Ω–æ–π url[m
[32m+[m[32m    monkeypatch.setattr([m
[32m+[m[32m        "pyshorteners.Shortener",[m
[32m+[m[32m        lambda: fake_shortener_expect_url_factory(expected)[m
[32m+[m[32m    )[m
[32m+[m[32m    out = shorten_via_tinyurl("   https://example.com/x   ", timeout=0.5)[m
[32m+[m[32m    assert out == "https://tiny.one/abc123"[m
[32m+[m
[32m+[m
[32m+[m[32m# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∏ http, –∏ https[m
[32m+[m[32m@pytest.mark.parametrize("url", [[m
[32m+[m[32m    "http://example.com/a",[m
[32m+[m[32m    "https://example.com/b",[m
[32m+[m[32m])[m
[32m+[m[32mdef test_shorten_via_tinyurl_accepts_http_and_https([m
[32m+[m[32m    monkeypatch, fake_shortener_ok_factory, url[m
[32m+[m[32m):[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m[32m    out = shorten_via_tinyurl(url, timeout=0.2)[m
[32m+[m[32m    assert out == "https://tiny.one/abc123"[m
[32m+[m
[32m+[m
[32m+[m[32m# timeout –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ—Ç—Å—è –≤ future.result(timeout=...)[m
[32m+[m[32mdef test_shorten_via_tinyurl_forwards_timeout([m
[32m+[m[32m    monkeypatch, fake_pool_capturing_timeout_factory, fake_shortener_ok_factory[m
[32m+[m[32m):[m
[32m+[m[32m    # 1) —Å—Ç–∞–≤–∏–º —É—Å–ø–µ—à–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m
[32m+[m[32m    # 2) –ø–æ–¥–º–µ–Ω—è–µ–º –ø—É–ª –Ω–∞ –Ω–∞—à—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç timeout[m
[32m+[m[32m    fake_pool, captured = fake_pool_capturing_timeout_factory()[m
[32m+[m[32m    monkeypatch.setattr("lite_upgrade.ThreadPoolExecutor", lambda max_workers=1: fake_pool)[m
[32m+[m
[32m+[m[32m    # 3) –≤—ã–∑—ã–≤–∞–µ–º —Å ¬´–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º¬ª —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω –¥–æ—à—ë–ª[m
[32m+[m[32m    t = 0.123[m
[32m+[m[32m    out = shorten_via_tinyurl("https://example.com", timeout=t)[m
[32m+[m[32m    assert out == "https://tiny.one/abc123"[m
[32m+[m[32m    assert captured["timeout"] == t[m
[32m+[m[32m    assert captured["calls"] == 1[m
[32m+[m
[32m+[m
[32m+[m[32mdef test_shorten_via_tinyurl_returns_provider_output(monkeypatch):[m
[32m+[m[32m    # –ü—Ä–æ–≤–∞–π–¥–µ—Ä –≤–µ—Ä–Ω—ë—Ç –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π URL ‚Äî –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ç—Ä–æ–≥–∞–µ—Ç –µ–≥–æ[m
[32m+[m[32m    class FakeTiny:[m
[32m+[m[32m        def short(self, url: str) -> str:[m
[32m+[m[32m            return "https://tiny.one/custom123?x=1#frag"[m
[32m+[m[32m    class FakeShortener:[m
[32m+[m[32m        tinyurl = FakeTiny()[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", lambda: FakeShortener())[m
[32m+[m
[32m+[m[32m    out = shorten_via_tinyurl("https://example.com/abc", timeout=0.2)[m
[32m+[m[32m    assert out == "https://tiny.one/custom123?x=1#frag"[m
[32m+[m
[32m+[m
[32m+[m[32m@pytest.mark.parametrize("url", [[m
[32m+[m[32m    "https://example.com/–ø—Ä–∏–≤–µ—Ç",[m
[32m+[m[32m    "https://–ø—Ä–∏–º–µ—Ä.—Ä—Ñ/—Å—Ç—Ä–∞–Ω–∏—Ü–∞",[m
[32m+[m[32m])[m
[32m+[m[32mdef test_shorten_via_tinyurl_handles_unicode(monkeypatch, fake_shortener_ok_factory, url):[m
[32m+[m[32m    monkeypatch.setattr("pyshorteners.Shortener", fake_shortener_ok_factory)[m
[32m+[m[32m    out = shorten_via_tinyurl(url, timeout=0.2)[m
[32m+[m[32m    assert out == "https://tiny.one/abc123"[m
[1mdiff --git a/tests/test_smoke.py b/tests/test_smoke.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c191042[m
[1m--- /dev/null[m
[1m+++ b/tests/test_smoke.py[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mdef test_basic_math():[m
[32m+[m[32m    assert 2 + 2 == 4[m
[1mdiff --git a/tests/test_ui_builders_smoke.py b/tests/test_ui_builders_smoke.py[m
[1mnew file mode 100644[m
[1mindex 0000000..855c8a2[m
[1m--- /dev/null[m
[1m+++ b/tests/test_ui_builders_smoke.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mimport pytest[m
[32m+[m
[32m+[m[32mui = pytest.importorskip("urlcutter.ui_builders")  # –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –º–æ–¥—É–ª—è[m
[32m+[m
[32m+[m[32mdef test_builders_do_not_crash():[m
[32m+[m[32m    header = ui.build_header()[m
[32m+[m[32m    title_bar = ui.build_title_bar()[m
[32m+[m[32m    inputs = ui.build_inputs()[m
[32m+[m[32m    buttons = ui.build_buttons()[m
[32m+[m[32m    footer = ui.build_footer()[m
[32m+[m
[32m+[m[32m    assert header is not None[m
[32m+[m[32m    assert isinstance(title_bar, tuple) and len(title_bar) == 4[m
[32m+[m[32m    assert isinstance(inputs, tuple) and len(inputs) == 2[m
[32m+[m[32m    assert isinstance(buttons, tuple) and len(buttons) == 4[m
[32m+[m[32m    assert footer is not None[m
[32m+[m
[32m+[m[32mdef test_compose_page_smoke():[m
[32m+[m[32m    title_bar, *_ = ui.build_title_bar()[m
[32m+[m[32m    header = ui.build_header()[m
[32m+[m[32m    url_inp, short_out = ui.build_inputs()[m
[32m+[m[32m    row, btn1, btn2, btn3 = ui.build_buttons()[m
[32m+[m[32m    footer = ui.build_footer()[m
[32m+[m[32m    root = ui.compose_page(title_bar, header, url_inp, short_out, row, footer)[m
[32m+[m[32m    assert root is not None[m
[1mdiff --git a/url_cutter.py b/url_cutter.py[m
[1mindex 35181a5..f6299ab 100644[m
[1m--- a/url_cutter.py[m
[1m+++ b/url_cutter.py[m
[36m@@ -1,9 +1,10 @@[m
[32m+[m[32mimport webbrowser[m
[32m+[m
 import flet as ft[m
[32m+[m[32mimport pyperclip[m
 import pyshorteners[m
 import pyshorteners.shorteners.tinyurl[m
 import validators[m
[31m-import pyperclip[m
[31m-import webbrowser[m
 [m
 [m
 def main(page: ft.Page):[m
[36m@@ -42,9 +43,7 @@[m [mdef main(page: ft.Page):[m
     def shorten_url():[m
         long_url = url_input_field.value[m
         if long_url.startswith("https://tinyurl.com"):[m
[31m-            snack_bar = ft.SnackBar(ft.Text("This is already a shortened URL."),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("This is already a shortened URL."), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -57,9 +56,7 @@[m [mdef main(page: ft.Page):[m
             page.update()[m
         else:[m
             # Display an error message or show the SnackBar[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Incorrect URL, try again."),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Incorrect URL, try again."), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -70,9 +67,7 @@[m [mdef main(page: ft.Page):[m
             url_input_field.update()[m
             page.update()[m
         else:[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Nothing to clear!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Nothing to clear!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -81,17 +76,13 @@[m [mdef main(page: ft.Page):[m
     def copy_to_clipboard(url):[m
         if short_url_field.value:[m
             page.set_clipboard(url)[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Copied to clipboard!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Copied to clipboard!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
         else:[m
             page.set_clipboard(url)[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Nothing to copy!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Nothing to copy!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -115,7 +106,8 @@[m [mdef main(page: ft.Page):[m
                         "Hi! My name is Alexandra. I'm a Python developer. "[m
                         "It's one of my apps. If you like my work, "[m
                         "there are contacts below where you can contact me!",[m
[31m-                        size=18),[m
[32m+[m[32m                        size=18,[m
[32m+[m[32m                    ),[m
                     # Website[m
                     ft.Row([m
                         controls=[[m
[36m@@ -124,10 +116,10 @@[m [mdef main(page: ft.Page):[m
                                 icon=ft.Icons.WEB,[m
                                 tooltip="Website",[m
                                 icon_size=30,[m
[31m-                                on_click=lambda e: open_link("https://mywebsite.com")[m
[31m-                            )[m
[32m+[m[32m                                on_click=lambda e: open_link("https://mywebsite.com"),[m
[32m+[m[32m                            ),[m
                         ],[m
[31m-                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
                     ),[m
                     # Email[m
                     ft.Row([m
[36m@@ -137,10 +129,10 @@[m [mdef main(page: ft.Page):[m
                                 icon=ft.Icons.EMAIL,[m
                                 tooltip="Email",[m
                                 icon_size=30,[m
[31m-                                on_click=lambda e: open_link("mailto:alexgicheva@gmail.com")[m
[31m-                            )[m
[32m+[m[32m                                on_click=lambda e: open_link("mailto:alexgicheva@gmail.com"),[m
[32m+[m[32m                            ),[m
                         ],[m
[31m-                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
                     ),[m
                     # GitHub[m
                     ft.Row([m
[36m@@ -150,15 +142,15 @@[m [mdef main(page: ft.Page):[m
                                 icon=ft.Icons.HUB,[m
                                 tooltip="GitHub",[m
                                 icon_size=30,[m
[31m-                                on_click=lambda e: open_link("https://github.com/SkriptSparrow")[m
[31m-                            )[m
[32m+[m[32m                                on_click=lambda e: open_link("https://github.com/SkriptSparrow"),[m
[32m+[m[32m                            ),[m
                         ],[m
[31m-                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
                     ),[m
                 ],[m
[31m-                spacing=20[m
[32m+[m[32m                spacing=20,[m
             ),[m
[31m-            actions=[ft.TextButton("OK", on_click=lambda e: close_dialog(dialog))][m
[32m+[m[32m            actions=[ft.TextButton("OK", on_click=lambda e: close_dialog(dialog))],[m
         )[m
         page.overlay.append(dialog)[m
         dialog.open = True[m
[36m@@ -180,22 +172,13 @@[m [mdef main(page: ft.Page):[m
     minimize_button = ft.IconButton(ft.Icons.REMOVE, on_click=minimize_window)[m
 [m
     # Drag area for window[m
[31m-    drag_area = ft.WindowDragArea([m
[31m-        ft.Container(height=50, width=1000),[m
[31m-        expand=True,[m
[31m-        maximizable=False[m
[31m-    )[m
[32m+[m[32m    drag_area = ft.WindowDragArea(ft.Container(height=50, width=1000), expand=True, maximizable=False)[m
 [m
     # Custom title bar (you can style it as you like)[m
     title_bar = ft.Row([m
[31m-        controls=[[m
[31m-            maximize_button,[m
[31m-            drag_area,[m
[31m-            minimize_button,[m
[31m-            close_button[m
[31m-        ],[m
[32m+[m[32m        controls=[maximize_button, drag_area, minimize_button, close_button],[m
         alignment=ft.MainAxisAlignment.END,[m
[31m-        vertical_alignment=ft.CrossAxisAlignment.CENTER[m
[32m+[m[32m        vertical_alignment=ft.CrossAxisAlignment.CENTER,[m
     )[m
 [m
     # Indents for separating interface elements[m
[36m@@ -206,95 +189,90 @@[m [mdef main(page: ft.Page):[m
     margin_botton1 = ft.Container(height=5, width=400)[m
 [m
     # Scissors icon for the header[m
[31m-    image = ft.Image(src="C:\\Users\\Administrator\\PycharmProjects\\Apps\\Url_Cutter\\img\\icon scissors.png",[m
[31m-                     width=150,[m
[31m-                     height=150)[m
[32m+[m[32m    image = ft.Image([m
[32m+[m[32m        src="C:\\Users\\Administrator\\PycharmProjects\\Apps\\Url_Cutter\\img\\icon scissors.png",[m
[32m+[m[32m        width=150,[m
[32m+[m[32m        height=150,[m
[32m+[m[32m    )[m
 [m
     # Download Rubik font[m
     page.fonts = {"Rubik": "../fonts/rubik/Rubik-Medium.ttf"}[m
 [m
     # Container with icon and title (center alignment)[m
     header_col = ft.Column([m
[31m-        controls=[image, margin_img_txt, ft.Text([m
[31m-            "URL CUTTER",[m
[31m-            font_family="Rubik",[m
[31m-            size=26,[m
[31m-            weight=ft.FontWeight.BOLD)[m
[32m+[m[32m        controls=[[m
[32m+[m[32m            image,[m
[32m+[m[32m            margin_img_txt,[m
[32m+[m[32m            ft.Text("URL CUTTER", font_family="Rubik", size=26, weight=ft.FontWeight.BOLD),[m
         ],[m
         alignment=ft.MainAxisAlignment.START,[m
         horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
         width=400,[m
[31m-        spacing=0[m
[32m+[m[32m        spacing=0,[m
     )[m
 [m
     # Field for entering a long URL[m
     url_input_field = ft.TextField([m
         label="Input long URL",[m
[31m-        label_style=ft.TextStyle(color='#EB244E'),[m
[32m+[m[32m        label_style=ft.TextStyle(color="#EB244E"),[m
         height=50,[m
         width=350,[m
[31m-        suffix=ft.IconButton([m
[31m-            icon=ft.Icons.CONTENT_PASTE,[m
[31m-            on_click=on_paste_click),[m
[31m-        border_color='#EB244E',[m
[32m+[m[32m        suffix=ft.IconButton(icon=ft.Icons.CONTENT_PASTE, on_click=on_paste_click),[m
[32m+[m[32m        border_color="#EB244E",[m
     )[m
 [m
     # Field for outputting a short URL[m
     short_url_field = ft.TextField([m
         label="Short URL",[m
[31m-        label_style=ft.TextStyle(color='#EB244E'),[m
[32m+[m[32m        label_style=ft.TextStyle(color="#EB244E"),[m
         read_only=True,[m
         height=60,[m
         width=350,[m
[31m-        border_color='#EB244E',[m
[32m+[m[32m        border_color="#EB244E",[m
     )[m
 [m
     # URL shortening button with a slight rounding effect[m
     shorten_button = ft.ElevatedButton([m
         "CUT",[m
         color=ft.Colors.WHITE,[m
[31m-        bgcolor='#EB244E',[m
[32m+[m[32m        bgcolor="#EB244E",[m
         height=40,[m
         width=90,[m
         on_click=lambda e: shorten_url(),[m
         style=ft.ButtonStyle([m
             shape=ft.RoundedRectangleBorder(radius=8),[m
[31m-            text_style=ft.TextStyle([m
[31m-                font_family="Rubik",[m
[31m-                size=18[m
[31m-            )[m
[31m-        )[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
     )[m
 [m
     # Button to copy a short URL[m
     copy_button = ft.ElevatedButton([m
         content=ft.Icon(ft.Icons.CONTENT_COPY),[m
[31m-        color='#EB244E',[m
[32m+[m[32m        color="#EB244E",[m
         height=40,[m
         width=80,[m
         on_click=lambda e: copy_to_clipboard(short_url_field.value),[m
[31m-        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8))[m
[32m+[m[32m        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8)),[m
     )[m
 [m
     # Button to clear a long URL[m
     clear_button = ft.ElevatedButton([m
         "CLEAR",[m
[31m-        color='#EB244E',[m
[32m+[m[32m        color="#EB244E",[m
         height=40,[m
         width=110,[m
         on_click=lambda e: clear_text(url_input_field.value),[m
[31m-        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8),[m
[31m-                             text_style=ft.TextStyle([m
[31m-                                 font_family="Rubik",[m
[31m-                                 size=18)[m
[31m-                             )[m
[32m+[m[32m        style=ft.ButtonStyle([m
[32m+[m[32m            shape=ft.RoundedRectangleBorder(radius=8),[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
     )[m
 [m
     # Left container with only the shorten button[m
     left_container = ft.Column([m
         controls=[shorten_button],[m
[31m-        width=90,  # Adjust as necessary[m
[31m-        alignment=ft.MainAxisAlignment.START[m
[32m+[m[32m        width=90,[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.START,  # Adjust as necessary[m
     )[m
 [m
     # Right container with clear and copy buttons[m
[36m@@ -302,7 +280,7 @@[m [mdef main(page: ft.Page):[m
         controls=[clear_button, copy_button],[m
         spacing=10,[m
         width=200,  # Adjust as necessary[m
[31m-        alignment=ft.MainAxisAlignment.END[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.END,[m
     )[m
 [m
     # Container for buttons (arranged in a row with a certain distance)[m
[36m@@ -310,7 +288,7 @@[m [mdef main(page: ft.Page):[m
         controls=[left_container, right_container],[m
         alignment=ft.MainAxisAlignment.CENTER,[m
         spacing=60,[m
[31m-        width=350[m
[32m+[m[32m        width=350,[m
     )[m
 [m
     # Signature with text, center alignment[m
[36m@@ -325,17 +303,26 @@[m [mdef main(page: ft.Page):[m
     footer_container = ft.Column([m
         controls=[footer],[m
         alignment=ft.MainAxisAlignment.END,[m
[31m-        horizontal_alignment=ft.CrossAxisAlignment.CENTER[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
     )[m
 [m
     # A common container containing all the elements of a page[m
     content = ft.Column([m
[31m-        controls=[title_bar, margin_top, header_col, margin_middle,[m
[31m-                  url_input_field, short_url_field, button_row,[m
[31m-                  margin_botton, footer_container, margin_botton1],[m
[32m+[m[32m        controls=[[m
[32m+[m[32m            title_bar,[m
[32m+[m[32m            margin_top,[m
[32m+[m[32m            header_col,[m
[32m+[m[32m            margin_middle,[m
[32m+[m[32m            url_input_field,[m
[32m+[m[32m            short_url_field,[m
[32m+[m[32m            button_row,[m
[32m+[m[32m            margin_botton,[m
[32m+[m[32m            footer_container,[m
[32m+[m[32m            margin_botton1,[m
[32m+[m[32m        ],[m
         alignment=ft.MainAxisAlignment.CENTER,[m
         horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[31m-        spacing=10[m
[32m+[m[32m        spacing=10,[m
     )[m
 [m
     # Adding a container to a page with vertical alignment[m
[36m@@ -344,7 +331,7 @@[m [mdef main(page: ft.Page):[m
             controls=[content],[m
             alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
             horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[31m-            height=page.window.height[m
[32m+[m[32m            height=page.window.height,[m
         )[m
     )[m
 [m
[1mdiff --git a/url_cutter.spec b/url_cutter.spec[m
[1mdeleted file mode 100644[m
[1mindex 493ae3a..0000000[m
[1m--- a/url_cutter.spec[m
[1m+++ /dev/null[m
[36m@@ -1,39 +0,0 @@[m
[31m-# -*- mode: python ; coding: utf-8 -*-[m
[31m-[m
[31m-[m
[31m-a = Analysis([m
[31m-    ['url_cutter.py'],[m
[31m-    pathex=[],[m
[31m-    binaries=[],[m
[31m-    datas=[('C:\\Users\\Asus\\PycharmProjects\\Apps\\Url_Cutter\\fonts', '.'), ('C:\\Users\\Asus\\PycharmProjects\\Apps\\Url_Cutter\\img\\icon scissors.png', '.')],[m
[31m-    hiddenimports=[],[m
[31m-    hookspath=[],[m
[31m-    hooksconfig={},[m
[31m-    runtime_hooks=[],[m
[31m-    excludes=[],[m
[31m-    noarchive=False,[m
[31m-    optimize=0,[m
[31m-)[m
[31m-pyz = PYZ(a.pure)[m
[31m-[m
[31m-exe = EXE([m
[31m-    pyz,[m
[31m-    a.scripts,[m
[31m-    a.binaries,[m
[31m-    a.datas,[m
[31m-    [],[m
[31m-    name='url_cutter',[m
[31m-    debug=False,[m
[31m-    bootloader_ignore_signals=False,[m
[31m-    strip=False,[m
[31m-    upx=True,[m
[31m-    upx_exclude=[],[m
[31m-    runtime_tmpdir=None,[m
[31m-    console=False,[m
[31m-    disable_windowed_traceback=False,[m
[31m-    argv_emulation=False,[m
[31m-    target_arch=None,[m
[31m-    codesign_identity=None,[m
[31m-    entitlements_file=None,[m
[31m-    icon=['C:\\Users\\Asus\\PycharmProjects\\Apps\\Url_Cutter\\img\\icon.ico'],[m
[31m-)[m
[1mdiff --git a/urlcutter/__init__.py b/urlcutter/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c8ca410[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/__init__.py[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mfrom .normalization import normalize_url, _url_fingerprint[m
[32m+[m[32mfrom .protection import ([m
[32m+[m[32m    AppState, internet_ok, circuit_blocked, cooldown_left,[m
[32m+[m[32m    record_failure, record_success, rate_limit_allow,[m
[32m+[m[32m    _get_state, _reset_state,[m
[32m+[m[32m    CLIENT_RPM_LIMIT, CB_FAIL_THRESHOLD, CB_COOLDOWN_SEC,[m
[32m+[m[32m    CIRCUIT_FAIL_THRESHOLD, CIRCUIT_COOLDOWN_SEC, RATE_LIMIT_WINDOW_SEC,[m
[32m+[m[32m)[m
[32m+[m[32mfrom .shorteners import shorten_via_tinyurl_core[m
[32m+[m[32mfrom .logging_utils import setup_logging[m
[32m+[m
[32m+[m
[32m+[m[32m__all__ = ["normalize_url", "_url_fingerprint"][m
[32m+[m[32m__version__ = "0.1.0"[m
\ No newline at end of file[m
[1mdiff --git a/urlcutter/assets/__init__.py b/urlcutter/assets/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/urlcutter/handlers.py b/urlcutter/handlers.py[m
[1mnew file mode 100644[m
[1mindex 0000000..3407bfa[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/handlers.py[m
[36m@@ -0,0 +1,257 @@[m
[32m+[m[32mimport flet as ft[m
[32m+[m[32mimport logging, pyperclip, webbrowser, validators[m
[32m+[m[32mfrom urllib.parse import urlparse[m
[32m+[m[32mfrom concurrent.futures import TimeoutError as FutTimeout[m
[32m+[m
[32m+[m[32mfrom lite_upgrade import internet_ok, shorten_via_tinyurl[m
[32m+[m[32mfrom urlcutter import AppState, CLIENT_RPM_LIMIT, _url_fingerprint[m
[32m+[m
[32m+[m
[32m+[m[32mREQUEST_TIMEOUT = 8.0[m
[32m+[m[32mRETRIES = 1[m
[32m+[m[32mDEFAULT_HTTP_TIMEOUT = 5[m
[32m+[m
[32m+[m
[32m+[m[32mdef _safe_fp(s: str) -> str:[m
[32m+[m[32m    try:[m
[32m+[m[32m        return _url_fingerprint(s)[m
[32m+[m[32m    except Exception:[m
[32m+[m[32m        # –Ω–∞ –ø—É—Å—Ç—ã—Ö/–º—É—Å–æ—Ä–Ω—ã—Ö –≤—Ö–æ–¥–∞—Ö –ª–æ–≥–∏—Ä—É–µ–º –º—è–≥–∫–æ[m
[32m+[m[32m        return s or "<empty>"[m
[32m+[m
[32m+[m
[32m+[m[32mclass Handlers:[m
[32m+[m[32m    def __init__([m
[32m+[m[32m        self,[m
[32m+[m[32m        page: ft.Page,[m
[32m+[m[32m        logger: logging.Logger,[m
[32m+[m[32m        state: AppState,[m
[32m+[m[32m        url_input_field: ft.TextField,[m
[32m+[m[32m        short_url_field: ft.TextField,[m
[32m+[m[32m        shorten_button: ft.ElevatedButton,[m
[32m+[m[32m    ):[m
[32m+[m[32m        self.page = page[m
[32m+[m[32m        self.logger = logger[m
[32m+[m[32m        self.state = state[m
[32m+[m[32m        self.url_input_field = url_input_field[m
[32m+[m[32m        self.short_url_field = short_url_field[m
[32m+[m[32m        self.shorten_button = shorten_button[m
[32m+[m
[32m+[m[32m    # UX-—É—Ç–∏–ª–∏—Ç—ã[m
[32m+[m[32m    def toast(self, msg: str, ms: int = 1500):[m
[32m+[m[32m        sb = ft.SnackBar(ft.Text(msg), bgcolor=ft.Colors.BLACK, duration=ms)[m
[32m+[m[32m        self.page.overlay.append(sb)[m
[32m+[m[32m        sb.open = True[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    def busy(self, on: bool):[m
[32m+[m[32m        self.page.cursor = ft.MouseCursor.WAIT if on else ft.MouseCursor.BASIC[m
[32m+[m[32m        self.shorten_button.disabled = on[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    # –ö–Ω–æ–ø–∫–∏/–ø–æ–ª—è[m
[32m+[m[32m    def on_paste(self, _):[m
[32m+[m[32m        self.toast("paste-click")[m
[32m+[m[32m        self.logger.info("on_paste fired")[m
[32m+[m[32m        pasted_text = pyperclip.paste()[m
[32m+[m[32m        self.url_input_field.value = pasted_text[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    def on_clear(self, _):[m
[32m+[m[32m        if self.url_input_field.value:[m
[32m+[m[32m            self.url_input_field.value = ""[m
[32m+[m[32m            self.url_input_field.update()[m
[32m+[m[32m            self.page.update()[m
[32m+[m[32m        else:[m
[32m+[m[32m            self.toast("Nothing to clear!", 1000)[m
[32m+[m
[32m+[m[32m    def on_copy(self, e):[m
[32m+[m[32m        text = (self.short_url_field.value or "").strip()[m
[32m+[m[32m        if text:[m
[32m+[m[32m            self.page.set_clipboard(text)[m
[32m+[m[32m            self.toast("Copied to clipboard!")[m
[32m+[m[32m            self.logger.info("copy_to_clipboard ok")[m
[32m+[m[32m        else:[m
[32m+[m[32m            self.toast("Nothing to copy!")[m
[32m+[m[32m            self.logger.info("copy_to_clipboard skipped reason=empty")[m
[32m+[m
[32m+[m[32m    def on_open_info(self, _):[m
[32m+[m[32m        def open_link(url):[m
[32m+[m[32m            webbrowser.open(url)[m
[32m+[m
[32m+[m[32m        dialog = ft.AlertDialog([m
[32m+[m[32m            title=ft.Text("My contacts", text_align=ft.TextAlign.CENTER),[m
[32m+[m[32m            shape=ft.RoundedRectangleBorder(radius=8),[m
[32m+[m[32m            content=ft.Column([m
[32m+[m[32m                controls=[[m
[32m+[m[32m                    ft.Text([m
[32m+[m[32m                        "Hi! My name is Alexandra. I'm a Python developer. "[m
[32m+[m[32m                        "It's one of my apps. If you like my work, "[m
[32m+[m[32m                        "there are contacts below where you can contact me!",[m
[32m+[m[32m                        size=18,[m
[32m+[m[32m                    ),[m
[32m+[m[32m                    ft.Row([m
[32m+[m[32m                        controls=[[m
[32m+[m[32m                            ft.Text("My website:", expand=1, size=18),[m
[32m+[m[32m                            ft.IconButton([m
[32m+[m[32m                                icon=ft.Icons.WEB,[m
[32m+[m[32m                                tooltip="Website",[m
[32m+[m[32m                                icon_size=30,[m
[32m+[m[32m                                on_click=lambda e: open_link("https://mywebsite.com"),[m
[32m+[m[32m                            ),[m
[32m+[m[32m                        ],[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
[32m+[m[32m                    ),[m
[32m+[m[32m                    ft.Row([m
[32m+[m[32m                        controls=[[m
[32m+[m[32m                            ft.Text("My mail:", expand=1, size=18),[m
[32m+[m[32m                            ft.IconButton([m
[32m+[m[32m                                icon=ft.Icons.EMAIL,[m
[32m+[m[32m                                tooltip="Email",[m
[32m+[m[32m                                icon_size=30,[m
[32m+[m[32m                                on_click=lambda e: open_link("mailto:alexgicheva@gmail.com"),[m
[32m+[m[32m                            ),[m
[32m+[m[32m                        ],[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
[32m+[m[32m                    ),[m
[32m+[m[32m                    ft.Row([m
[32m+[m[32m                        controls=[[m
[32m+[m[32m                            ft.Text("My github:", expand=1, size=18),[m
[32m+[m[32m                            ft.IconButton([m
[32m+[m[32m                                icon=ft.Icons.HUB,[m
[32m+[m[32m                                tooltip="GitHub",[m
[32m+[m[32m                                icon_size=30,[m
[32m+[m[32m                                on_click=lambda e: open_link("https://github.com/SkriptSparrow"),[m
[32m+[m[32m                            ),[m
[32m+[m[32m                        ],[m
[32m+[m[32m                        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
[32m+[m[32m                    ),[m
[32m+[m[32m                ],[m
[32m+[m[32m                spacing=20,[m
[32m+[m[32m            ),[m
[32m+[m[32m            actions=[ft.TextButton("OK", on_click=lambda e: self.close_dialog(dialog))],[m
[32m+[m[32m        )[m
[32m+[m[32m        self.page.overlay.append(dialog)[m
[32m+[m[32m        dialog.open = True[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    def close_dialog(self, dialog):[m
[32m+[m[32m        dialog.open = False[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    def on_close(self, _):[m
[32m+[m[32m        self.page.window.close()[m
[32m+[m
[32m+[m[32m    def on_minimize(self, _):[m
[32m+[m[32m        self.page.window.minimized = True[m
[32m+[m[32m        self.page.update()[m
[32m+[m
[32m+[m[32m    # –ì–ª–∞–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –≤–∞–ª–∏–¥–∞—Ü–∏—è ‚Üí –∑–∞—â–∏—Ç–∞ ‚Üí –≤—ã–∑–æ–≤ —Å–µ—Ä–≤–∏—Å–∞ ‚Üí –≤—ã–≤–æ–¥[m
[32m+[m[32m    def on_shorten(self, _):[m
[32m+[m[32m        long_url = self.url_input_field.value.strip()[m
[32m+[m
[32m+[m[32m        # –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ª–æ–≥, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –Ω–∞ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö[m
[32m+[m[32m        self.logger.info("shorten_request url=%s", _safe_fp(long_url))[m
[32m+[m
[32m+[m[32m        # 0) –ü—É—Å—Ç–æ[m
[32m+[m[32m        if not long_url:[m
[32m+[m[32m            self.toast("Enter the link.")[m
[32m+[m[32m            self.logger.info("shorten_reject reason=empty_input")[m
[32m+[m[32m            return[m
[32m+[m
[32m+[m[32m        # 0.5) –í–∞–ª–∏–¥–∞—Ü–∏—è URL (–Ω–µ –¥–∞—ë–º validators.url —É—Ä–æ–Ω–∏—Ç—å –Ω–∞—Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º)[m
[32m+[m[32m        try:[m
[32m+[m[32m            is_valid = bool(validators.url(long_url))[m
[32m+[m[32m        except Exception:[m
[32m+[m[32m            is_valid = False[m
[32m+[m
[32m+[m[32m        if not is_valid:[m
[32m+[m[32m            self.toast("Incorrect URL. Check the link.")[m
[32m+[m[32m            self.logger.info([m
[32m+[m[32m                "shorten_reject reason=invalid_url url=%s",[m
[32m+[m[32m                _safe_fp(long_url)  # ‚Üê —Ç–æ–∂–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –ª–æ–≥–∏—Ä—É–µ–º[m
[32m+[m[32m            )[m
[32m+[m[32m            return[m
[32m+[m
[32m+[m[32m        # 1) –£–∂–µ tinyurl[m
[32m+[m[32m        if long_url.startswith("https://tinyurl.com"):[m
[32m+[m[32m            self.toast("This is already a short link.")[m
[32m+[m[32m            self.logger.info("shorten_reject reason=already_shortened provider=tinyurl")[m
[32m+[m[32m            return[m
[32m+[m
[32m+[m[32m        # 2) –ó–∞—â–∏—Ç–∞[m
[32m+[m[32m        if self.state.circuit_blocked():[m
[32m+[m[32m            self.toast(f"Service cooling down {self.state.cooldown_left()}s after repeated errors.")[m
[32m+[m[32m            self.logger.warning("shorten_blocked reason=circuit_open cooldown_left=%ds", self.state.cooldown_left())[m
[32m+[m[32m            return[m
[32m+[m[32m        if not self.state.rate_limit_allow(self.logger):[m
[32m+[m[32m            self.toast(f"Local limit {CLIENT_RPM_LIMIT}/min to respect remote caps. Try later.")[m
[32m+[m[32m            self.logger.warning("shorten_blocked reason=local_rate_limit rpm=%d", CLIENT_RPM_LIMIT)[m
[32m+[m[32m            return[m
[32m+[m[32m        if not internet_ok(self.logger):[m
[32m+[m[32m            self.toast("No internet connection detected.")[m
[32m+[m[32m            self.logger.warning("shorten_blocked reason=offline")[m
[32m+[m[32m            return[m
[32m+[m
[32m+[m[32m        # 3) –ó–∞–ø—É—Å–∫–∞–µ–º —Å —Ç–∞–π–º–∞—É—Ç–æ–º + —Ä–µ—Ç—Ä–∞–π[m
[32m+[m[32m        self.busy(True)[m
[32m+[m[32m        last_err = None[m
[32m+[m[32m        for attempt in range(1 + RETRIES):[m
[32m+[m[32m            self.logger.info([m
[32m+[m[32m                "attempt_start provider=tinyurl attempt=%d timeout=%.1fs",[m
[32m+[m[32m                attempt + 1,[m
[32m+[m[32m                REQUEST_TIMEOUT,[m
[32m+[m[32m            )[m
[32m+[m[32m            try:[m
[32m+[m[32m                short_url = shorten_via_tinyurl(long_url, REQUEST_TIMEOUT)[m
[32m+[m[32m                self.short_url_field.value = short_url[m
[32m+[m[32m                self.page.update()[m
[32m+[m[32m                self.toast("Done! Link shortened.")[m
[32m+[m[32m                self.busy(False)[m
[32m+[m[32m                self.logger.info("attempt_success provider=tinyurl short_host=%s", urlparse(short_url).netloc)[m
[32m+[m[32m                self.state.record_success()[m
[32m+[m[32m                return[m
[32m+[m
[32m+[m[32m            except FutTimeout:[m
[32m+[m[32m                last_err = "timeout"[m
[32m+[m[32m                self.logger.error([m
[32m+[m[32m                    "attempt_error provider=tinyurl kind=timeout timeout=%.1fs attempt=%d",[m
[32m+[m[32m                    REQUEST_TIMEOUT,[m
[32m+[m[32m                    attempt + 1,[m
[32m+[m[32m                )[m
[32m+[m
[32m+[m[32m            except Exception as e:[m
[32m+[m[32m                msg = str(e)[m
[32m+[m[32m                if "429" in msg or "Too Many Requests" in msg:[m
[32m+[m[32m                    last_err = "rate"[m
[32m+[m[32m                elif any(x in msg for x in ("502", "503", "504")):[m
[32m+[m[32m                    last_err = "unavailable"[m
[32m+[m[32m                else:[m
[32m+[m[32m                    last_err = "unknown"[m
[32m+[m[32m                if last_err == "unknown":[m
[32m+[m[32m                    self.logger.exception([m
[32m+[m[32m                        "attempt_error provider=tinyurl kind=%s attempt=%d err=%s",[m
[32m+[m[32m                        last_err,[m
[32m+[m[32m                        attempt + 1,[m
[32m+[m[32m                        msg,[m
[32m+[m[32m                    )[m
[32m+[m[32m                else:[m
[32m+[m[32m                    self.logger.error([m
[32m+[m[32m                        "attempt_error provider=tinyurl kind=%s attempt=%d err=%s",[m
[32m+[m[32m                        last_err,[m
[32m+[m[32m                        attempt + 1,[m
[32m+[m[32m                        msg,[m
[32m+[m[32m                    )[m
[32m+[m
[32m+[m[32m        # 4) –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã[m
[32m+[m[32m        self.busy(False)[m
[32m+[m[32m        self.state.record_failure()[m
[32m+[m[32m        self.logger.error("shorten_failed url=%s final_reason=%s", _url_fingerprint(long_url), last_err)[m
[32m+[m[32m        if last_err == "timeout":[m
[32m+[m[32m            self.toast("The service did not respond. Check the internet or try again later.")[m
[32m+[m[32m        elif last_err == "rate":[m
[32m+[m[32m            self.toast("Too many requests. Please wait a minute and try again.")[m
[32m+[m[32m        elif last_err == "unavailable":[m
[32m+[m[32m            self.toast("The service is temporarily unavailable. Please try again later.")[m
[32m+[m[32m        else:[m
[32m+[m[32m            self.toast("Failed to shorten the link. Details in the logs.")[m
[1mdiff --git a/urlcutter/logging_utils.py b/urlcutter/logging_utils.py[m
[1mnew file mode 100644[m
[1mindex 0000000..bc25a77[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/logging_utils.py[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32mimport logging[m
[32m+[m[32mfrom logging.handlers import RotatingFileHandler[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m
[32m+[m[32mdef setup_logging([m
[32m+[m[32m    *,[m
[32m+[m[32m    enabled: bool = True,[m
[32m+[m[32m    debug: bool = False,[m
[32m+[m[32m    logger_name: str = "urlcutter",[m
[32m+[m[32m    file_path: str | None = "logs/app.log",[m
[32m+[m[32m    max_bytes: int = 500_000,[m
[32m+[m[32m    backups: int = 3,[m
[32m+[m[32m) -> logging.Logger:[m
[32m+[m[32m    """[m
[32m+[m[32m    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.[m
[32m+[m[32m    - enabled=False: –æ—Ç–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ (—Å—Ç–∞–≤–∏–º NullHandler), —É—Ä–æ–≤–µ–Ω—å WARNING (–∏–ª–∏ DEBUG, –µ—Å–ª–∏ debug=True).[m
[32m+[m[32m    - enabled=True: –¥–æ–±–∞–≤–ª—è–µ–º StreamHandler –∏, –µ—Å–ª–∏ file_path –Ω–µ None, RotatingFileHandler.[m
[32m+[m[32m    """[m
[32m+[m[32m    logger = logging.getLogger(logger_name)[m
[32m+[m
[32m+[m[32m    # –ß–∏—Å—Ç–∏–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã, —á—Ç–æ–±—ã –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–∞—Ö –Ω–µ –ø–ª–æ–¥–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã[m
[32m+[m[32m    logger.handlers.clear()[m
[32m+[m
[32m+[m[32m    level = logging.DEBUG if debug else logging.INFO[m
[32m+[m[32m    if not enabled:[m
[32m+[m[32m        logger.setLevel(logging.DEBUG if debug else logging.WARNING)[m
[32m+[m[32m        logger.addHandler(logging.NullHandler())[m
[32m+[m[32m        return logger[m
[32m+[m
[32m+[m[32m    logger.setLevel(level)[m
[32m+[m
[32m+[m[32m    fmt = logging.Formatter("%(asctime)s [%(levelname)s] %(message)s")[m
[32m+[m
[32m+[m[32m    # –ö–æ–Ω—Å–æ–ª—å[m
[32m+[m[32m    sh = logging.StreamHandler()[m
[32m+[m[32m    sh.setFormatter(fmt)[m
[32m+[m[32m    logger.addHandler(sh)[m
[32m+[m
[32m+[m[32m    # –§–∞–π–ª (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å)[m
[32m+[m[32m    if file_path:[m
[32m+[m[32m        Path(file_path).parent.mkdir(parents=True, exist_ok=True)[m
[32m+[m[32m        fh = RotatingFileHandler(file_path, maxBytes=max_bytes, backupCount=backups, encoding="utf-8")[m
[32m+[m[32m        fh.setFormatter(fmt)[m
[32m+[m[32m        logger.addHandler(fh)[m
[32m+[m
[32m+[m[32m    return logger[m
[1mdiff --git a/urlcutter/normalization.py b/urlcutter/normalization.py[m
[1mnew file mode 100644[m
[1mindex 0000000..9557f2d[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/normalization.py[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32m# urlcutter/normalization.py[m
[32m+[m[32mfrom urllib.parse import urlsplit, urlunsplit, parse_qsl, urlencode[m
[32m+[m[32mimport hashlib[m
[32m+[m
[32m+[m[32mdef _url_fingerprint(url: str) -> str:[m
[32m+[m[32m    if url is None:[m
[32m+[m[32m        raise ValueError("url is required")[m
[32m+[m[32m    s = str(url).strip()[m
[32m+[m[32m    if not s:[m
[32m+[m[32m        raise ValueError("url is empty")[m
[32m+[m
[32m+[m[32m    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å normalize_url –Ω–∏–∂–µ[m
[32m+[m[32m    s = normalize_url(s)[m
[32m+[m
[32m+[m[32m    digest = hashlib.sha1(s.encode("utf-8")).hexdigest()[m
[32m+[m[32m    return digest[m
[32m+[m
[32m+[m[32mdef normalize_url(s: str) -> str:[m
[32m+[m[32m    s = str(s)[m
[32m+[m[32m    s = s.strip(" ")[m
[32m+[m[32m    if not s:[m
[32m+[m[32m        raise ValueError("empty url")[m
[32m+[m
[32m+[m[32m    if any(ch.isspace() for ch in s):[m
[32m+[m[32m        raise ValueError("spaces in url")[m
[32m+[m
[32m+[m[32m    parts = urlsplit(s)[m
[32m+[m[32m    scheme = parts.scheme.lower()[m
[32m+[m
[32m+[m[32m    if scheme:[m
[32m+[m[32m        if scheme not in {"http", "https"}:[m
[32m+[m[32m            raise ValueError("bad scheme")[m
[32m+[m[32m    else:[m
[32m+[m[32m        parts = urlsplit("http://" + s)[m
[32m+[m[32m        scheme = "http"[m
[32m+[m
[32m+[m[32m    hostname = (parts.hostname or "").lower()[m
[32m+[m[32m    port = parts.port[m
[32m+[m[32m    if port and ((scheme == "http" and port == 80) or (scheme == "https" and port == 443)):[m
[32m+[m[32m        netloc = hostname[m
[32m+[m[32m    else:[m
[32m+[m[32m        netloc = hostname if port is None else f"{hostname}:{port}"[m
[32m+[m
[32m+[m[32m    path = parts.path or ""[m
[32m+[m
[32m+[m[32m    if parts.query:[m
[32m+[m[32m        q = parse_qsl(parts.query, keep_blank_values=True)[m
[32m+[m[32m        q.sort()[m
[32m+[m[32m        query = urlencode(q)[m
[32m+[m[32m    else:[m
[32m+[m[32m        query = ""[m
[32m+[m
[32m+[m[32m    fragment = ""[m
[32m+[m[32m    return urlunsplit((scheme, netloc, path, query, fragment))[m
[1mdiff --git a/urlcutter/protection.py b/urlcutter/protection.py[m
[1mnew file mode 100644[m
[1mindex 0000000..a004838[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/protection.py[m
[36m@@ -0,0 +1,117 @@[m
[32m+[m[32mfrom collections import deque[m
[32m+[m[32mfrom typing import Callable[m
[32m+[m[32mimport time[m
[32m+[m[32mimport logging[m
[32m+[m
[32m+[m[32m# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è ---[m
[32m+[m[32mCLIENT_RPM_LIMIT = 60           # —Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É —Ä–∞–∑—Ä–µ—à–µ–Ω–æ[m
[32m+[m[32mCB_FAIL_THRESHOLD = 3           # –ø–æ—Å–ª–µ —Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–¥—Ä—è–¥ –æ—à–∏–±–æ–∫ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å[m
[32m+[m[32mCB_COOLDOWN_SEC = 30            # —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–µ—Ä–∂–∏–º ¬´–æ—Ç–∫—Ä—ã—Ç—ã–º¬ª[m
[32m+[m[32mCIRCUIT_FAIL_THRESHOLD = 3  # —Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ä—è–¥ –æ—à–∏–±–æ–∫, —á—Ç–æ–±—ã "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è"[m
[32m+[m[32mCIRCUIT_COOLDOWN_SEC = 60  # –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è" (cooldown)[m
[32m+[m[32mRATE_LIMIT_WINDOW_SEC = 60[m
[32m+[m
[32m+[m[32m# --- –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø—Ä–æ—Å—Ç–æ–µ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ) ---[m
[32m+[m[32m_state = {[m
[32m+[m[32m    "ticks": deque(),           # —Ç–∞–π–º—Å—Ç–µ–º–ø—ã —É—Å–ø–µ—à–Ω—ã—Ö –≤—ã–¥–∞—á –¥–ª—è rate-limit[m
[32m+[m[32m    "fail_count": 0,            # —Å—á—ë—Ç—á–∏–∫ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö –æ—à–∏–±–æ–∫[m
[32m+[m[32m    "cb_open_until": 0.0,       # unix-–≤—Ä–µ–º—è, –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å ¬´–æ—Ç–∫—Ä—ã—Ç¬ª[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è —Ñ–∏–∫—Å—Ç—É—Ä)[m
[32m+[m[32mdef _get_state():[m
[32m+[m[32m    return _state[m
[32m+[m
[32m+[m[32mdef _reset_state():[m
[32m+[m[32m    _state["ticks"].clear()[m
[32m+[m[32m    _state["fail_count"] = 0[m
[32m+[m[32m    _state["cb_open_until"] = 0.0[m
[32m+[m
[32m+[m
[32m+[m[32mclass AppState:[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        self.ticks = deque(maxlen=CLIENT_RPM_LIMIT * 2)[m
[32m+[m[32m        self.fails = 0[m
[32m+[m[32m        self.blocked_until = 0.0[m
[32m+[m
[32m+[m[32m    def circuit_blocked(self) -> bool:[m
[32m+[m[32m        return time.time() < self.blocked_until[m
[32m+[m
[32m+[m[32m    def record_failure(self):[m
[32m+[m[32m        self.fails += 1[m
[32m+[m[32m        if self.fails >= CIRCUIT_FAIL_THRESHOLD:[m
[32m+[m[32m            self.blocked_until = time.time() + CIRCUIT_COOLDOWN_SEC[m
[32m+[m
[32m+[m[32m    def record_success(self):[m
[32m+[m[32m        self.fails = 0[m
[32m+[m[32m        self.blocked_until = 0.0[m
[32m+[m
[32m+[m[32m    def cooldown_left(self) -> int:[m
[32m+[m[32m        return max(0, int(self.blocked_until - time.time()))[m
[32m+[m
[32m+[m[32m    def rate_limit_allow(self, logger: logging.Logger) -> bool:[m
[32m+[m[32m        now = time.time()[m
[32m+[m[32m        while self.ticks and now - self.ticks[0] > RATE_LIMIT_WINDOW_SEC:[m
[32m+[m[32m            self.ticks.popleft()[m
[32m+[m[32m        if len(self.ticks) >= CLIENT_RPM_LIMIT:[m
[32m+[m[32m            logger.warning("rate_limit hit rpm=%d queue_len=%d", CLIENT_RPM_LIMIT, len(self.ticks))[m
[32m+[m[32m            return False[m
[32m+[m[32m        self.ticks.append(now)[m
[32m+[m[32m        return True[m
[32m+[m
[32m+[m
[32m+[m[32mdef _now_default() -> float:[m
[32m+[m[32m    import time[m
[32m+[m[32m    return time.time()[m
[32m+[m
[32m+[m[32mdef circuit_blocked(*, now_fn: Callable[[], float] = _now_default) -> bool:[m
[32m+[m[32m    now = now_fn()[m
[32m+[m[32m    return now < _state["cb_open_until"][m
[32m+[m
[32m+[m[32mdef cooldown_left(*, now_fn: Callable[[], float] = _now_default) -> int:[m
[32m+[m[32m    now = now_fn()[m
[32m+[m[32m    left = int(round(_state["cb_open_until"] - now))[m
[32m+[m[32m    return max(0, left)[m
[32m+[m
[32m+[m[32mdef record_failure(*, now_fn: Callable[[], float] = _now_default) -> None:[m
[32m+[m[32m    now = now_fn()[m
[32m+[m[32m    # –ï—Å–ª–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–∏–º —Ç–∞–π–º–µ—Ä (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ —É–¥–æ–±–Ω–æ)[m
[32m+[m[32m    if now < _state["cb_open_until"]:[m
[32m+[m[32m        return[m
[32m+[m[32m    _state["fail_count"] += 1[m
[32m+[m[32m    if _state["fail_count"] >= CB_FAIL_THRESHOLD:[m
[32m+[m[32m        _state["cb_open_until"] = now + CB_COOLDOWN_SEC[m
[32m+[m[32m        _state["fail_count"] = 0  # —Å–±—Ä–æ—Å–∏–º, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –æ–∫–Ω–∞ —Å—á–∏—Ç–∞—Ç—å –∑–∞–Ω–æ–≤–æ[m
[32m+[m
[32m+[m[32mdef record_success() -> None:[m
[32m+[m[32m    # –õ—é–±–æ–π —É—Å–ø–µ—à–Ω—ã–π –≤—ã–∑–æ–≤ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫[m
[32m+[m[32m    _state["fail_count"] = 0[m
[32m+[m
[32m+[m[32mdef rate_limit_allow(*, now_fn: Callable[[], float] = _now_default) -> bool:[m
[32m+[m[32m    """[m
[32m+[m[32m    –°–∫–æ–ª—å–∑—è—â–µ–µ –æ–∫–Ω–æ 60 —Å–µ–∫: –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–∫–∏ –∏ —Ä–µ—à–∞–µ–º, –º–æ–∂–Ω–æ –ª–∏ –µ—â—ë.[m
[32m+[m[32m    """[m
[32m+[m[32m    now = now_fn()[m
[32m+[m[32m    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ä—à–µ 60—Å[m
[32m+[m[32m    window_start = now - float(RATE_LIMIT_WINDOW_SEC)[m
[32m+[m[32m    ticks = _state["ticks"][m
[32m+[m[32m    while ticks and ticks[0] <= window_start:[m
[32m+[m[32m        ticks.popleft()[m
[32m+[m[32m    if len(ticks) < CLIENT_RPM_LIMIT:[m
[32m+[m[32m        ticks.append(now)[m
[32m+[m[32m        return True[m
[32m+[m[32m    return False[m
[32m+[m
[32m+[m
[32m+[m[32mdef internet_ok(logger: logging.Logger, *, AppState_cls=AppState) -> bool:[m
[32m+[m[32m    st = AppState_cls()[m
[32m+[m
[32m+[m[32m    if st.circuit_blocked():[m
[32m+[m[32m        logger.warning("circuit open: skip network")[m
[32m+[m[32m        return False[m
[32m+[m
[32m+[m[32m    if not st.rate_limit_allow(logger):[m
[32m+[m[32m        logger.warning("rate limit exceeded")[m
[32m+[m[32m        return False[m
[32m+[m
[32m+[m[32m    return True[m
[1mdiff --git a/urlcutter/shorteners.py b/urlcutter/shorteners.py[m
[1mnew file mode 100644[m
[1mindex 0000000..adb096f[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/shorteners.py[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32m"""TinyURL shortener core with dual backend:[m
[32m+[m[32m- direct HTTP API (DI via _get for unit tests)[m
[32m+[m[32m- pyshorteners + ThreadPoolExecutor (keeps legacy tests happy)[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom __future__ import annotations[m
[32m+[m[32mimport requests[m
[32m+[m
[32m+[m[32m# stdlib[m
[32m+[m[32mfrom concurrent.futures import ThreadPoolExecutor[m
[32m+[m[32mfrom typing import Callable, Optional[m
[32m+[m[32mfrom urllib.parse import quote, urlparse[m
[32m+[m
[32m+[m[32m# 3rd party[m
[32m+[m[32mimport requests[m
[32m+[m
[32m+[m[32m# local[m
[32m+[m[32mfrom urlcutter import normalize_url[m
[32m+[m
[32m+[m
[32m+[m[32m__all__ = ["shorten_via_tinyurl_core"][m
[32m+[m
[32m+[m[32mDEFAULT_HTTP_TIMEOUT = 5[m
[32m+[m
[32m+[m
[32m+[m[32mdef _looks_like_url(s: str) -> bool:[m
[32m+[m[32m    p = urlparse(s)[m
[32m+[m[32m    return p.scheme in ("http", "https") and bool(p.netloc)[m
[32m+[m
[32m+[m
[32m+[m[32mdef shorten_via_tinyurl_core([m
[32m+[m[32m    url: str,[m
[32m+[m[32m    timeout: Optional[float] = None,[m
[32m+[m[32m    *,[m
[32m+[m[32m    _get: Optional[Callable[..., object]] = None,[m
[32m+[m[32m    _shortener_factory: Optional[Callable[[], object]] = None,[m
[32m+[m[32m    _pool_factory: Optional[Callable[..., ThreadPoolExecutor]] = None,[m
[32m+[m[32m) -> str:[m
[32m+[m[32m    """Return a TinyURL short link for `url`.[m
[32m+[m
[32m+[m[32m    Behavior:[m
[32m+[m[32m      - If `_get` is provided, use direct HTTP API (TinyURL endpoint).[m
[32m+[m[32m      - Otherwise use `pyshorteners.Shortener().tinyurl.short(...)`.[m
[32m+[m[32m      - If `timeout` is provided in the pyshorteners path, call via a pool and[m
[32m+[m[32m        pass the timeout to `future.result(timeout=...)`.[m
[32m+[m
[32m+[m[32m    Raises:[m
[32m+[m[32m      ValueError   ‚Äî bad input, or provider returned non‚ÄëURL payload.[m
[32m+[m[32m      TimeoutError ‚Äî when pyshorteners path exceeds the given timeout.[m
[32m+[m[32m      RuntimeError ‚Äî network/provider errors in other cases.[m
[32m+[m[32m    """[m
[32m+[m[32m    # --- Early validate user input (before any provider call) ---[m
[32m+[m[32m    if not isinstance(url, str) or not url.strip():[m
[32m+[m[32m        raise ValueError("url must be a non-empty string")[m
[32m+[m
[32m+[m[32m    # 1) Normalize (trim spaces, validate scheme, etc.)[m
[32m+[m[32m    norm = normalize_url(url)[m
[32m+[m
[32m+[m[32m    # --- A) Direct HTTP path (used by new unit-tests) ---[m
[32m+[m[32m    if _get is not None:[m
[32m+[m[32m        get = _get or requests.get[m
[32m+[m[32m        api = f"https://tinyurl.com/api-create.php?url={quote(norm, safe='')}"[m
[32m+[m[32m        try:[m
[32m+[m[32m            resp = get(api, timeout=(timeout or DEFAULT_HTTP_TIMEOUT))[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            raise RuntimeError(f"TinyURL request failed: {e}") from e[m
[32m+[m
[32m+[m[32m        if getattr(resp, "status_code", 200) != 200:[m
[32m+[m[32m            raise RuntimeError(f"TinyURL HTTP {resp.status_code}")[m
[32m+[m
[32m+[m[32m        short = getattr(resp, "text", "").strip()[m
[32m+[m[32m        if not _looks_like_url(short):[m
[32m+[m[32m            raise ValueError("TinyURL returned invalid payload")[m
[32m+[m[32m        return short[m
[32m+[m
[32m+[m[32m    # --- B) pyshorteners + thread pool (legacy tests expect this) ---[m
[32m+[m[32m    try:[m
[32m+[m[32m        shortener_factory = _shortener_factory[m
[32m+[m[32m        if shortener_factory is None:[m
[32m+[m[32m            import pyshorteners  # local import to avoid unused dep when not needed[m
[32m+[m[32m            shortener_factory = pyshorteners.Shortener[m
[32m+[m
[32m+[m[32m        shortener = shortener_factory()[m
[32m+[m[32m        tiny = shortener.tinyurl[m
[32m+[m
[32m+[m[32m        if timeout is None:[m
[32m+[m[32m            return tiny.short(norm)[m
[32m+[m
[32m+[m[32m        pool_factory = _pool_factory or ThreadPoolExecutor[m
[32m+[m[32m        with pool_factory(max_workers=1) as pool:[m
[32m+[m[32m            fut = pool.submit(tiny.short, norm)[m
[32m+[m[32m            return fut.result(timeout=timeout)[m
[32m+[m
[32m+[m[32m    except TimeoutError:[m
[32m+[m[32m        # Propagate exactly as tests expect[m
[32m+[m[32m        raise[m
[32m+[m[32m    except ValueError:[m
[32m+[m[32m        # Respect provider's own ValueError if any[m
[32m+[m[32m        raise[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        # Any other provider/pool error ‚Üí RuntimeError[m
[32m+[m[32m        raise RuntimeError(f"TinyURL provider error: {e}") from e[m
[1mdiff --git a/urlcutter/ui_builders.py b/urlcutter/ui_builders.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c1183fe[m
[1m--- /dev/null[m
[1m+++ b/urlcutter/ui_builders.py[m
[36m@@ -0,0 +1,164 @@[m
[32m+[m[32mimport flet as ft[m
[32m+[m[32mimport importlib.resources as res[m
[32m+[m
[32m+[m
[32m+[m[32mdef configure_window_and_theme(page: ft.Page):[m
[32m+[m[32m    page.window.center()[m
[32m+[m[32m    page.title = "URL CUTTER"[m
[32m+[m[32m    page.vertical_alignment = ft.MainAxisAlignment.CENTER[m
[32m+[m[32m    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER[m
[32m+[m[32m    page.window.resizable = False[m
[32m+[m[32m    page.adaptive = True[m
[32m+[m[32m    page.window.width = 445[m
[32m+[m[32m    page.window.height = 730[m
[32m+[m[32m    page.window.title_bar_hidden = True[m
[32m+[m[32m    page.window.frameless = False[m
[32m+[m
[32m+[m[32m    page.theme_mode = ft.ThemeMode.LIGHT[m
[32m+[m[32m    page.theme = ft.Theme(color_scheme=ft.ColorScheme(primary=ft.Colors.RED))[m
[32m+[m[32m    # –®—Ä–∏—Ñ—Ç –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –≤ –∏—Å—Ö–æ–¥–Ω–∏–∫–µ[m
[32m+[m[32m    font_path = res.files("urlcutter").joinpath("assets/fonts/rubik/Rubik-Medium.ttf")[m
[32m+[m[32m    page.fonts = {"Rubik": str(font_path)}[m
[32m+[m
[32m+[m
[32m+[m[32mdef build_title_bar() -> tuple[ft.Row, ft.IconButton, ft.IconButton, ft.IconButton]:[m
[32m+[m[32m    close_button = ft.IconButton(ft.Icons.CLOSE)[m
[32m+[m[32m    info_button = ft.IconButton(ft.Icons.MENU)[m
[32m+[m[32m    minimize_button = ft.IconButton(ft.Icons.REMOVE)[m
[32m+[m[32m    drag_area = ft.WindowDragArea(ft.Container(height=50, width=1000), expand=True, maximizable=False)[m
[32m+[m[32m    row = ft.Row([m
[32m+[m[32m        controls=[info_button, drag_area, minimize_button, close_button],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.END,[m
[32m+[m[32m        vertical_alignment=ft.CrossAxisAlignment.CENTER,[m
[32m+[m[32m    )[m
[32m+[m[32m    return row, info_button, minimize_button, close_button[m
[32m+[m
[32m+[m
[32m+[m[32mdef build_header() -> ft.Column:[m
[32m+[m[32m    img_path = res.files("urlcutter").joinpath("assets/img/icon scissors.png")[m
[32m+[m[32m    image = ft.Image(  # –ø—É—Ç—å –æ—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ –µ—Å—Ç—å ‚Äî –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –ø—Ä–æ–≤–µ—Ä—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å[m
[32m+[m[32m        src=str(img_path),[m
[32m+[m[32m        width=150,[m
[32m+[m[32m        height=150,[m
[32m+[m[32m    )[m
[32m+[m[32m    margin_img_txt = ft.Container(height=65, width=400)[m
[32m+[m[32m    return ft.Column([m
[32m+[m[32m        controls=[[m
[32m+[m[32m            image,[m
[32m+[m[32m            margin_img_txt,[m
[32m+[m[32m            ft.Text("URL CUTTER", font_family="Rubik", size=26, weight=ft.FontWeight.BOLD),[m
[32m+[m[32m        ],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.START,[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[32m+[m[32m        width=400,[m
[32m+[m[32m        spacing=0,[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m
[32m+[m[32mdef build_inputs() -> tuple[ft.TextField, ft.TextField]:[m
[32m+[m[32m    url_input_field = ft.TextField([m
[32m+[m[32m        label="Input long URL",[m
[32m+[m[32m        label_style=ft.TextStyle(color="#EB244E"),[m
[32m+[m[32m        height=50,[m
[32m+[m[32m        width=350,[m
[32m+[m[32m        suffix=ft.IconButton(icon=ft.Icons.CONTENT_PASTE),[m
[32m+[m[32m        border_color="#EB244E",[m
[32m+[m[32m    )[m
[32m+[m[32m    short_url_field = ft.TextField([m
[32m+[m[32m        label="Short URL",[m
[32m+[m[32m        label_style=ft.TextStyle(color="#EB244E"),[m
[32m+[m[32m        read_only=True,[m
[32m+[m[32m        height=60,[m
[32m+[m[32m        width=350,[m
[32m+[m[32m        border_color="#EB244E",[m
[32m+[m[32m    )[m
[32m+[m[32m    return url_input_field, short_url_field[m
[32m+[m
[32m+[m
[32m+[m[32mdef build_buttons() -> tuple[ft.Row, ft.ElevatedButton, ft.ElevatedButton, ft.ElevatedButton]:[m
[32m+[m[32m    shorten_button = ft.ElevatedButton([m
[32m+[m[32m        "CUT",[m
[32m+[m[32m        color=ft.Colors.WHITE,[m
[32m+[m[32m        bgcolor="#EB244E",[m
[32m+[m[32m        height=40,[m
[32m+[m[32m        width=90,[m
[32m+[m[32m        style=ft.ButtonStyle([m
[32m+[m[32m            shape=ft.RoundedRectangleBorder(radius=8),[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
[32m+[m[32m    )[m
[32m+[m[32m    copy_button = ft.ElevatedButton([m
[32m+[m[32m        content=ft.Icon(ft.Icons.CONTENT_COPY),[m
[32m+[m[32m        color="#EB244E",[m
[32m+[m[32m        height=40,[m
[32m+[m[32m        width=80,[m
[32m+[m[32m        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8)),[m
[32m+[m[32m    )[m
[32m+[m[32m    clear_button = ft.ElevatedButton([m
[32m+[m[32m        "CLEAR",[m
[32m+[m[32m        color="#EB244E",[m
[32m+[m[32m        height=40,[m
[32m+[m[32m        width=110,[m
[32m+[m[32m        style=ft.ButtonStyle([m
[32m+[m[32m            shape=ft.RoundedRectangleBorder(radius=8),[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
[32m+[m[32m    )[m
[32m+[m[32m    left_container = ft.Column(controls=[shorten_button], width=90, alignment=ft.MainAxisAlignment.START)[m
[32m+[m[32m    right_container = ft.Row([m
[32m+[m[32m        controls=[clear_button, copy_button],[m
[32m+[m[32m        spacing=10,[m
[32m+[m[32m        width=200,[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.END,[m
[32m+[m[32m    )[m
[32m+[m[32m    button_row = ft.Row([m
[32m+[m[32m        controls=[left_container, right_container],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.CENTER,[m
[32m+[m[32m        spacing=60,[m
[32m+[m[32m        width=350,[m
[32m+[m[32m    )[m
[32m+[m[32m    return button_row, shorten_button, clear_button, copy_button[m
[32m+[m
[32m+[m
[32m+[m[32mdef build_footer() -> ft.Column:[m
[32m+[m[32m    footer = ft.Text([m
[32m+[m[32m        "DEVELOPED BY CODEBIRD",[m
[32m+[m[32m        color=ft.Colors.GREY_500,[m
[32m+[m[32m        width=350,[m
[32m+[m[32m        text_align=ft.TextAlign.CENTER,[m
[32m+[m[32m    )[m
[32m+[m[32m    return ft.Column([m
[32m+[m[32m        controls=[footer],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.END,[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m
[32m+[m[32mdef compose_page(title_bar, header_col, url_input_field, short_url_field, button_row, footer_container) -> ft.Column:[m
[32m+[m[32m    margin_top = ft.Container(height=100, width=400)[m
[32m+[m[32m    margin_middle = ft.Container(height=25, width=400)[m
[32m+[m[32m    margin_bottom = ft.Container(height=5, width=400)[m
[32m+[m[32m    margin_bottom1 = ft.Container(height=5, width=400)[m
[32m+[m
[32m+[m[32m    content = ft.Column([m
[32m+[m[32m        controls=[[m
[32m+[m[32m            title_bar,[m
[32m+[m[32m            margin_top,[m
[32m+[m[32m            header_col,[m
[32m+[m[32m            margin_middle,[m
[32m+[m[32m            url_input_field,[m
[32m+[m[32m            short_url_field,[m
[32m+[m[32m            button_row,[m
[32m+[m[32m            margin_bottom,[m
[32m+[m[32m            footer_container,[m
[32m+[m[32m            margin_bottom1,[m
[32m+[m[32m        ],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.CENTER,[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[32m+[m[32m        spacing=10,[m
[32m+[m[32m    )[m
[32m+[m[32m    return ft.Column([m
[32m+[m[32m        controls=[content],[m
[32m+[m[32m        alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[32m+[m[32m    )[m
\ No newline at end of file[m
[1mdiff --git a/ver1.5.py b/ver1.5.py[m
[1mindex f43c9fe..a647b2f 100644[m
[1m--- a/ver1.5.py[m
[1m+++ b/ver1.5.py[m
[36m@@ -1,9 +1,10 @@[m
[32m+[m[32mimport webbrowser[m
[32m+[m
 import flet as ft[m
[32m+[m[32mimport pyperclip[m
 import pyshorteners[m
 import pyshorteners.shorteners.tinyurl[m
 import validators[m
[31m-import pyperclip[m
[31m-import webbrowser[m
 [m
 [m
 def main(page: ft.Page):[m
[36m@@ -26,10 +27,7 @@[m [mdef main(page: ft.Page):[m
     # Page design theme[m
     page.theme_mode = ft.ThemeMode.DARK[m
     page.theme = ft.Theme([m
[31m-        color_scheme=ft.ColorScheme([m
[31m-            primary=ft.Colors.WHITE,[m
[31m-            primary_container='#3C1E68'[m
[31m-        ),[m
[32m+[m[32m        color_scheme=ft.ColorScheme(primary=ft.Colors.WHITE, primary_container="#3C1E68"),[m
     )[m
 [m
     # Paste button handler[m
[36m@@ -43,9 +41,7 @@[m [mdef main(page: ft.Page):[m
     def shorten_url():[m
         long_url = url_input_field.value[m
         if long_url.startswith("https://tinyurl.com"):[m
[31m-            snack_bar = ft.SnackBar(ft.Text("This is already a shortened URL."),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("This is already a shortened URL."), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -58,9 +54,7 @@[m [mdef main(page: ft.Page):[m
             page.update()[m
         else:[m
             # Display an error message or show the SnackBar[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Incorrect URL, try again."),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Incorrect URL, try again."), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -71,9 +65,7 @@[m [mdef main(page: ft.Page):[m
             url_input_field.update()[m
             page.update()[m
         else:[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Nothing to clear!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Nothing to clear!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -82,17 +74,13 @@[m [mdef main(page: ft.Page):[m
     def copy_to_clipboard(url):[m
         if short_url_field.value:[m
             page.set_clipboard(url)[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Copied to clipboard!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Copied to clipboard!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
         else:[m
             page.set_clipboard(url)[m
[31m-            snack_bar = ft.SnackBar(ft.Text("Nothing to copy!"),[m
[31m-                                    bgcolor=ft.Colors.BLACK,[m
[31m-                                    duration=1000)[m
[32m+[m[32m            snack_bar = ft.SnackBar(ft.Text("Nothing to copy!"), bgcolor=ft.Colors.BLACK, duration=1000)[m
             page.overlay.append(snack_bar)[m
             snack_bar.open = True[m
             page.update()[m
[36m@@ -117,29 +105,27 @@[m [mdef main(page: ft.Page):[m
                         tooltip="Email",[m
                         height=30,[m
                         width=30,[m
[31m-                        on_click=lambda e: open_link("mailto:alexgicheva@gmail.com")[m
[32m+[m[32m                        on_click=lambda e: open_link("mailto:alexgicheva@gmail.com"),[m
                     ),[m
                     ft.IconButton([m
                         icon=ft.Icons.SEND,[m
                         tooltip="Telegram",[m
                         height=30,[m
                         width=30,[m
[31m-                        on_click=lambda e: open_link("https://t.me/Alex_Gicheva")[m
[32m+[m[32m                        on_click=lambda e: open_link("https://t.me/Alex_Gicheva"),[m
                     ),[m
                     ft.IconButton([m
                         icon=ft.Icons.CODE,[m
                         tooltip="GitHub",[m
                         height=30,[m
                         width=30,[m
[31m-                        on_click=lambda e: open_link("https://github.com/SkriptSparrow")[m
[31m-                    )[m
[32m+[m[32m                        on_click=lambda e: open_link("https://github.com/SkriptSparrow"),[m
[32m+[m[32m                    ),[m
                 ],[m
                 alignment=ft.MainAxisAlignment.CENTER,[m
[31m-                spacing=20[m
[32m+[m[32m                spacing=20,[m
             ),[m
[31m-            actions=[[m
[31m-                ft.TextButton("OK", on_click=lambda e: close_dialog(dialog))[m
[31m-            ][m
[32m+[m[32m            actions=[ft.TextButton("OK", on_click=lambda e: close_dialog(dialog))],[m
         )[m
         page.overlay.append(dialog)[m
         dialog.open = True[m
[36m@@ -161,22 +147,13 @@[m [mdef main(page: ft.Page):[m
     minimize_button = ft.IconButton(ft.Icons.REMOVE, on_click=minimize_window)[m
 [m
     # Drag area for window[m
[31m-    drag_area = ft.WindowDragArea([m
[31m-        ft.Container(height=50, width=1000),[m
[31m-        expand=True,[m
[31m-        maximizable=False[m
[31m-    )[m
[32m+[m[32m    drag_area = ft.WindowDragArea(ft.Container(height=50, width=1000), expand=True, maximizable=False)[m
 [m
     # Custom title bar (you can style it as you like)[m
     title_bar = ft.Row([m
[31m-        controls=[[m
[31m-            maximize_button,[m
[31m-            drag_area,[m
[31m-            minimize_button,[m
[31m-            close_button[m
[31m-        ],[m
[32m+[m[32m        controls=[maximize_button, drag_area, minimize_button, close_button],[m
         alignment=ft.MainAxisAlignment.END,[m
[31m-        vertical_alignment=ft.CrossAxisAlignment.CENTER[m
[32m+[m[32m        vertical_alignment=ft.CrossAxisAlignment.CENTER,[m
     )[m
 [m
     # Indents for separating interface elements[m
[36m@@ -187,18 +164,16 @@[m [mdef main(page: ft.Page):[m
     margin_botton1 = ft.Container(height=5, width=400)[m
 [m
     # Scissors icon for the header[m
[31m-    image = ft.Image(src="C:\\Users\\Asus\\PycharmProjects\\Apps\\Url_Cutter\\icon scissors_1.png",[m
[31m-                     width=250,[m
[31m-                     height=250)[m
[32m+[m[32m    image = ft.Image([m
[32m+[m[32m        src="C:\\Users\\Asus\\PycharmProjects\\Apps\\Url_Cutter\\icon scissors_1.png",[m
[32m+[m[32m        width=250,[m
[32m+[m[32m        height=250,[m
[32m+[m[32m    )[m
 [m
     # Download Rubik font[m
     page.fonts = {"Rubik": "../fonts/rubik/Rubik-Medium.ttf"}[m
 [m
[31m-    name_elem = ft.Text([m
[31m-            "URL CUTTER",[m
[31m-            font_family="Rubik",[m
[31m-            size=26,[m
[31m-            weight=ft.FontWeight.BOLD)[m
[32m+[m[32m    name_elem = ft.Text("URL CUTTER", font_family="Rubik", size=26, weight=ft.FontWeight.BOLD)[m
 [m
     # Container with icon and title (center alignment)[m
     header_col = ft.Column([m
[36m@@ -206,7 +181,7 @@[m [mdef main(page: ft.Page):[m
         alignment=ft.MainAxisAlignment.START,[m
         horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
         width=400,[m
[31m-        spacing=0[m
[32m+[m[32m        spacing=0,[m
     )[m
 [m
     # Field for entering a long URL[m
[36m@@ -214,58 +189,47 @@[m [mdef main(page: ft.Page):[m
         label="Input long URL",[m
         height=50,[m
         width=350,[m
[31m-        suffix=ft.IconButton([m
[31m-            icon=ft.Icons.CONTENT_PASTE,[m
[31m-            on_click=on_paste_click)[m
[32m+[m[32m        suffix=ft.IconButton(icon=ft.Icons.CONTENT_PASTE, on_click=on_paste_click),[m
     )[m
 [m
     # Field for outputting a short URL[m
[31m-    short_url_field = ft.TextField([m
[31m-        label="Short URL",[m
[31m-        read_only=True,[m
[31m-        height=60,[m
[31m-        width=350[m
[31m-    )[m
[32m+[m[32m    short_url_field = ft.TextField(label="Short URL", read_only=True, height=60, width=350)[m
 [m
     # URL shortening button with a slight rounding effect[m
     shorten_button = ft.ElevatedButton([m
         "CUT",[m
         color=ft.Colors.WHITE,[m
[31m-        bgcolor='#3C1E68',[m
[32m+[m[32m        bgcolor="#3C1E68",[m
         height=40,[m
         width=70,[m
         on_click=lambda e: shorten_url(),[m
         style=ft.ButtonStyle([m
             shape=ft.RoundedRectangleBorder(radius=8),[m
[31m-            text_style=ft.TextStyle([m
[31m-                font_family="Rubik",[m
[31m-                size=18[m
[31m-            )[m
[31m-        )[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
     )[m
 [m
     # Button to copy a short URL[m
     copy_button = ft.ElevatedButton([m
         content=ft.Icon(ft.Icons.CONTENT_COPY),[m
[31m-        bgcolor='#3C1E68',[m
[32m+[m[32m        bgcolor="#3C1E68",[m
         height=40,[m
         width=70,[m
         on_click=lambda e: copy_to_clipboard(short_url_field.value),[m
[31m-        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8))[m
[32m+[m[32m        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8)),[m
     )[m
 [m
     # Button to clear a long URL[m
     clear_button = ft.ElevatedButton([m
         "CLEAR",[m
         color=ft.Colors.WHITE,[m
[31m-        bgcolor='#3C1E68',[m
[32m+[m[32m        bgcolor="#3C1E68",[m
         height=40,[m
         on_click=lambda e: clear_text(url_input_field.value),[m
[31m-        style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=8),[m
[31m-                             text_style=ft.TextStyle([m
[31m-                                 font_family="Rubik",[m
[31m-                                 size=18)[m
[31m-                             )[m
[32m+[m[32m        style=ft.ButtonStyle([m
[32m+[m[32m            shape=ft.RoundedRectangleBorder(radius=8),[m
[32m+[m[32m            text_style=ft.TextStyle(font_family="Rubik", size=18),[m
[32m+[m[32m        ),[m
     )[m
 [m
     # Container for buttons (arranged in a row with a certain distance)[m
[36m@@ -273,7 +237,7 @@[m [mdef main(page: ft.Page):[m
         controls=[shorten_button, clear_button, copy_button],[m
         alignment=ft.MainAxisAlignment.CENTER,[m
         spacing=68,[m
[31m-        width=350[m
[32m+[m[32m        width=350,[m
     )[m
 [m
     # Signature with text, center alignment[m
[36m@@ -288,14 +252,23 @@[m [mdef main(page: ft.Page):[m
     footer_container = ft.Column([m
         controls=[footer],[m
         alignment=ft.MainAxisAlignment.END,[m
[31m-        horizontal_alignment=ft.CrossAxisAlignment.CENTER[m
[32m+[m[32m        horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
     )[m
 [m
     violet_container = ft.Container([m
         content=ft.Column([m
[31m-            controls=[margin_img_txt, name_elem, margin_middle,[m
[31m-                      url_input_field, short_url_field, button_row,[m
[31m-                      margin_botton, footer_container, margin_middle, margin_middle],[m
[32m+[m[32m            controls=[[m
[32m+[m[32m                margin_img_txt,[m
[32m+[m[32m                name_elem,[m
[32m+[m[32m                margin_middle,[m
[32m+[m[32m                url_input_field,[m
[32m+[m[32m                short_url_field,[m
[32m+[m[32m                button_row,[m
[32m+[m[32m                margin_botton,[m
[32m+[m[32m                footer_container,[m
[32m+[m[32m                margin_middle,[m
[32m+[m[32m                margin_middle,[m
[32m+[m[32m            ],[m
             alignment=ft.MainAxisAlignment.CENTER,[m
             horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
             spacing=5,[m
[36m@@ -305,18 +278,17 @@[m [mdef main(page: ft.Page):[m
         gradient=ft.LinearGradient([m
             colors=["#33185C", "#613C9D", "#7048B3"],[m
             begin=ft.alignment.top_left,[m
[31m-            end=ft.alignment.bottom_right[m
[32m+[m[32m            end=ft.alignment.bottom_right,[m
         ),[m
[31m-        width=445[m
[32m+[m[32m        width=445,[m
     )[m
 [m
[31m-[m
     # A common container containing all the elements of a page[m
     content = ft.Column([m
         controls=[title_bar, margin_top, image, violet_container],[m
         alignment=ft.MainAxisAlignment.CENTER,[m
         horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[31m-        spacing=10[m
[32m+[m[32m        spacing=10,[m
     )[m
 [m
     # Adding a container to a page with vertical alignment[m
[36m@@ -325,7 +297,7 @@[m [mdef main(page: ft.Page):[m
             controls=[content],[m
             alignment=ft.MainAxisAlignment.SPACE_BETWEEN,[m
             horizontal_alignment=ft.CrossAxisAlignment.CENTER,[m
[31m-            height=page.window.height[m
[32m+[m[32m            height=page.window.height,[m
         )[m
     )[m
 [m
